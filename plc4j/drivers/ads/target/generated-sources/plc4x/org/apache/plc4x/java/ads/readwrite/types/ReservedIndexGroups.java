/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.ads.readwrite.types;

import org.apache.plc4x.java.spi.generation.Message;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

// Code generated by code-generation. DO NOT EDIT.

public enum ReservedIndexGroups {

    ADSIGRP_SYMTAB((long) 0x0000F000),
    ADSIGRP_SYMNAME((long) 0x0000F001),
    ADSIGRP_SYMVAL((long) 0x0000F002),
    ADSIGRP_SYM_HNDBYNAME((long) 0x0000F003),
    ADSIGRP_SYM_VALBYNAME((long) 0x0000F004),
    ADSIGRP_SYM_VALBYHND((long) 0x0000F005),
    ADSIGRP_SYM_RELEASEHND((long) 0x0000F006),
    ADSIGRP_SYM_INFOBYNAME((long) 0x0000F007),
    ADSIGRP_SYM_VERSION((long) 0x0000F008),
    ADSIGRP_SYM_INFOBYNAMEEX((long) 0x0000F009),
    ADSIGRP_SYM_DOWNLOAD((long) 0x0000F00A),
    ADSIGRP_SYM_UPLOAD((long) 0x0000F00B),
    ADSIGRP_SYM_UPLOADINFO((long) 0x0000F00C),
    ADSIGRP_SYMNOTE((long) 0x0000F010),
    ADSIGRP_IOIMAGE_RWIB((long) 0x0000F020),
    ADSIGRP_IOIMAGE_RWIX((long) 0x0000F021),
    ADSIGRP_IOIMAGE_RISIZE((long) 0x0000F025),
    ADSIGRP_IOIMAGE_RWOB((long) 0x0000F030),
    ADSIGRP_IOIMAGE_RWOX((long) 0x0000F031),
    ADSIGRP_IOIMAGE_RWOSIZE((long) 0x0000F035),
    ADSIGRP_IOIMAGE_CLEARI((long) 0x0000F040),
    ADSIGRP_IOIMAGE_CLEARO((long) 0x0000F050),
    ADSIGRP_IOIMAGE_RWIOB((long) 0x0000F060),
    ADSIGRP_MULTIPLE_READ((long) 0x0000F080),
    ADSIGRP_MULTIPLE_WRITE((long) 0x0000F081),
    ADSIGRP_MULTIPLE_READ_WRITE((long) 0x0000F082),
    ADSIGRP_MULTIPLE_RELEASE_HANDLE((long) 0x0000F083),
    ADSIGRP_DEVICE_DATA((long) 0x0000F100),
    ADSIOFFS_DEVDATA_ADSSTATE((long) 0x00000000),
    ADSIOFFS_DEVDATA_DEVSTATE((long) 0x00000002);

    private static final Logger logger = LoggerFactory.getLogger(ReservedIndexGroups.class);

    private static final Map<Long, ReservedIndexGroups> map;
    static {
        map = new HashMap<>();
        for (ReservedIndexGroups value : ReservedIndexGroups.values()) {
            map.put((long) value.getValue(), value);
        }
    }

    private long value;

    ReservedIndexGroups(long value) {
        this.value = value;
    }

    public long getValue() {
        return value;
    }

    public static ReservedIndexGroups enumForValue(long value) {
        if (!map.containsKey(value)) {
            logger.error("No ReservedIndexGroups for value {}", value);
        }
        return map.get(value);
    }

    public static Boolean isDefined(long value) {
        return map.containsKey(value);
    }

}
