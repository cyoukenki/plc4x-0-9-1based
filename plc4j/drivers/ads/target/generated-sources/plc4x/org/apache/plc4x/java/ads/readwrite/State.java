/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.ads.readwrite;

import static org.apache.plc4x.java.spi.generation.StaticHelper.*;

import org.apache.plc4x.java.ads.readwrite.io.*;
import org.apache.plc4x.java.ads.readwrite.types.*;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.apache.plc4x.java.api.value.*;
import org.apache.plc4x.java.spi.generation.Message;
import org.apache.plc4x.java.spi.generation.MessageIO;

import java.time.*;
import java.util.*;
import java.math.BigInteger;

// Code generated by code-generation. DO NOT EDIT.

public class State implements Message {


    // Properties.
    private final boolean initCommand;
    private final boolean updCommand;
    private final boolean timestampAdded;
    private final boolean highPriorityCommand;
    private final boolean systemCommand;
    private final boolean adsCommand;
    private final boolean noReturn;
    private final boolean response;
    private final boolean broadcast;

    public State(boolean initCommand, boolean updCommand, boolean timestampAdded, boolean highPriorityCommand, boolean systemCommand, boolean adsCommand, boolean noReturn, boolean response, boolean broadcast) {
        this.initCommand = initCommand;
        this.updCommand = updCommand;
        this.timestampAdded = timestampAdded;
        this.highPriorityCommand = highPriorityCommand;
        this.systemCommand = systemCommand;
        this.adsCommand = adsCommand;
        this.noReturn = noReturn;
        this.response = response;
        this.broadcast = broadcast;
    }

    public boolean getInitCommand() {
        return initCommand;
    }

    public boolean getUpdCommand() {
        return updCommand;
    }

    public boolean getTimestampAdded() {
        return timestampAdded;
    }

    public boolean getHighPriorityCommand() {
        return highPriorityCommand;
    }

    public boolean getSystemCommand() {
        return systemCommand;
    }

    public boolean getAdsCommand() {
        return adsCommand;
    }

    public boolean getNoReturn() {
        return noReturn;
    }

    public boolean getResponse() {
        return response;
    }

    public boolean getBroadcast() {
        return broadcast;
    }

    @Override
    public int getLengthInBytes() {
        return getLengthInBits() / 8;
    }

    @Override
    public int getLengthInBits() {
        return getLengthInBitsConditional(false);
    }

    public int getLengthInBitsConditional(boolean lastItem) {
        int lengthInBits = 0;
        State _value  = this;

        // Simple field (initCommand)
        lengthInBits += 1;

        // Simple field (updCommand)
        lengthInBits += 1;

        // Simple field (timestampAdded)
        lengthInBits += 1;

        // Simple field (highPriorityCommand)
        lengthInBits += 1;

        // Simple field (systemCommand)
        lengthInBits += 1;

        // Simple field (adsCommand)
        lengthInBits += 1;

        // Simple field (noReturn)
        lengthInBits += 1;

        // Simple field (response)
        lengthInBits += 1;

        // Simple field (broadcast)
        lengthInBits += 1;

        // Reserved Field (reserved)
        lengthInBits += 7;

        return lengthInBits;
    }

    @Override
    public MessageIO<State, State> getMessageIO() {
        return new StateIO();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof State)) {
            return false;
        }
        State that = (State) o;
        return
            (getInitCommand() == that.getInitCommand()) &&
            (getUpdCommand() == that.getUpdCommand()) &&
            (getTimestampAdded() == that.getTimestampAdded()) &&
            (getHighPriorityCommand() == that.getHighPriorityCommand()) &&
            (getSystemCommand() == that.getSystemCommand()) &&
            (getAdsCommand() == that.getAdsCommand()) &&
            (getNoReturn() == that.getNoReturn()) &&
            (getResponse() == that.getResponse()) &&
            (getBroadcast() == that.getBroadcast()) &&
            true;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            getInitCommand(),
            getUpdCommand(),
            getTimestampAdded(),
            getHighPriorityCommand(),
            getSystemCommand(),
            getAdsCommand(),
            getNoReturn(),
            getResponse(),
            getBroadcast()
        );
    }

    @Override
    public String toString() {
        return toString(ToStringStyle.SHORT_PREFIX_STYLE);
    }

    public String toString(ToStringStyle style) {
        return new ToStringBuilder(this, style)
            .append("initCommand", getInitCommand())
            .append("updCommand", getUpdCommand())
            .append("timestampAdded", getTimestampAdded())
            .append("highPriorityCommand", getHighPriorityCommand())
            .append("systemCommand", getSystemCommand())
            .append("adsCommand", getAdsCommand())
            .append("noReturn", getNoReturn())
            .append("response", getResponse())
            .append("broadcast", getBroadcast())
            .toString();
    }

}
