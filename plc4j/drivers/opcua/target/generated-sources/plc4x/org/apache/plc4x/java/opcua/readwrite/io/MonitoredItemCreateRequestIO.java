/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite.io;

import static org.apache.plc4x.java.spi.generation.StaticHelper.*;

import org.apache.plc4x.java.opcua.readwrite.*;
import org.apache.plc4x.java.opcua.readwrite.io.*;
import org.apache.plc4x.java.opcua.readwrite.types.*;
import org.apache.plc4x.java.api.exceptions.PlcRuntimeException;
import org.apache.plc4x.java.spi.generation.*;
import org.apache.plc4x.java.api.value.PlcValue;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.math.BigInteger;
import java.time.*;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Supplier;

// Code generated by code-generation. DO NOT EDIT.

public class MonitoredItemCreateRequestIO implements MessageIO<MonitoredItemCreateRequest, MonitoredItemCreateRequest> {

    private static final Logger LOGGER = LoggerFactory.getLogger(MonitoredItemCreateRequestIO.class);

    @Override
    public MonitoredItemCreateRequest parse(ReadBuffer readBuffer, Object... args) throws ParseException {
        return (MonitoredItemCreateRequest) new ExtensionObjectDefinitionIO().parse(readBuffer, args);
    }

    @Override
    public void serialize(WriteBuffer writeBuffer, MonitoredItemCreateRequest value, Object... args) throws ParseException {
        new ExtensionObjectDefinitionIO().serialize(writeBuffer, value, args);
    }

    public static MonitoredItemCreateRequestBuilder staticParse(ReadBuffer readBuffer) throws ParseException {
        readBuffer.pullContext("MonitoredItemCreateRequest");
        int startPos = readBuffer.getPos();
        int curPos;

        readBuffer.pullContext("itemToMonitor");

        // Simple Field (itemToMonitor)
ExtensionObjectDefinition itemToMonitor = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(628) ) ;        readBuffer.closeContext("itemToMonitor");

        readBuffer.pullContext("monitoringMode");

        // Simple Field (monitoringMode)
        // enum based simple field with type MonitoringMode
        MonitoringMode monitoringMode = MonitoringMode.enumForValue(readBuffer.readUnsignedLong("MonitoringMode", 32));
        readBuffer.closeContext("monitoringMode");

        readBuffer.pullContext("requestedParameters");

        // Simple Field (requestedParameters)
ExtensionObjectDefinition requestedParameters = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(742) ) ;        readBuffer.closeContext("requestedParameters");

        readBuffer.closeContext("MonitoredItemCreateRequest");
        // Create the instance
        return new MonitoredItemCreateRequestBuilder(itemToMonitor, monitoringMode, requestedParameters);
    }

    public static void staticSerialize(WriteBuffer writeBuffer, MonitoredItemCreateRequest _value) throws ParseException {
        int startPos = writeBuffer.getPos();
        writeBuffer.pushContext("MonitoredItemCreateRequest");

        // Simple Field (itemToMonitor)
        ExtensionObjectDefinition itemToMonitor = (ExtensionObjectDefinition) _value.getItemToMonitor();
        writeBuffer.pushContext("itemToMonitor");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, itemToMonitor);
        writeBuffer.popContext("itemToMonitor");

        // Simple Field (monitoringMode)
        MonitoringMode monitoringMode = (MonitoringMode) _value.getMonitoringMode();
        writeBuffer.pushContext("monitoringMode");
        // enum field with type MonitoringMode
        writeBuffer.writeUnsignedLong("MonitoringMode", 32, ((Number) (monitoringMode.getValue())).longValue(), WithReaderWriterArgs.WithAdditionalStringRepresentation(monitoringMode.name()));
        writeBuffer.popContext("monitoringMode");

        // Simple Field (requestedParameters)
        ExtensionObjectDefinition requestedParameters = (ExtensionObjectDefinition) _value.getRequestedParameters();
        writeBuffer.pushContext("requestedParameters");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, requestedParameters);
        writeBuffer.popContext("requestedParameters");
        writeBuffer.popContext("MonitoredItemCreateRequest");
    }

    public static class MonitoredItemCreateRequestBuilder implements ExtensionObjectDefinitionIO.ExtensionObjectDefinitionBuilder {
        private final ExtensionObjectDefinition itemToMonitor;
        private final MonitoringMode monitoringMode;
        private final ExtensionObjectDefinition requestedParameters;

        public MonitoredItemCreateRequestBuilder(ExtensionObjectDefinition itemToMonitor, MonitoringMode monitoringMode, ExtensionObjectDefinition requestedParameters) {
            this.itemToMonitor = itemToMonitor;
            this.monitoringMode = monitoringMode;
            this.requestedParameters = requestedParameters;
        }

        public MonitoredItemCreateRequest build() {
            return new MonitoredItemCreateRequest(itemToMonitor, monitoringMode, requestedParameters);
        }
    }

}
