/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite;

import static org.apache.plc4x.java.spi.generation.StaticHelper.*;

import org.apache.plc4x.java.opcua.readwrite.io.*;
import org.apache.plc4x.java.opcua.readwrite.types.*;

import org.apache.commons.lang3.builder.ToStringBuilder;
import org.apache.commons.lang3.builder.ToStringStyle;
import org.apache.plc4x.java.api.value.*;
import org.apache.plc4x.java.spi.generation.Message;
import org.apache.plc4x.java.spi.generation.MessageIO;

import java.time.*;
import java.util.*;
import java.math.BigInteger;

// Code generated by code-generation. DO NOT EDIT.

public class ProgramDiagnostic2DataType extends ExtensionObjectDefinition implements Message {

    // Accessors for discriminator values.
    public String getIdentifier() {
        return "24035";
    }

    // Properties.
    private final NodeId createSessionId;
    private final PascalString createClientName;
    private final long invocationCreationTime;
    private final long lastTransitionTime;
    private final PascalString lastMethodCall;
    private final NodeId lastMethodSessionId;
    private final int noOfLastMethodInputArguments;
    private final ExtensionObjectDefinition[] lastMethodInputArguments;
    private final int noOfLastMethodOutputArguments;
    private final ExtensionObjectDefinition[] lastMethodOutputArguments;
    private final int noOfLastMethodInputValues;
    private final Variant[] lastMethodInputValues;
    private final int noOfLastMethodOutputValues;
    private final Variant[] lastMethodOutputValues;
    private final long lastMethodCallTime;
    private final StatusCode lastMethodReturnStatus;

    public ProgramDiagnostic2DataType(NodeId createSessionId, PascalString createClientName, long invocationCreationTime, long lastTransitionTime, PascalString lastMethodCall, NodeId lastMethodSessionId, int noOfLastMethodInputArguments, ExtensionObjectDefinition[] lastMethodInputArguments, int noOfLastMethodOutputArguments, ExtensionObjectDefinition[] lastMethodOutputArguments, int noOfLastMethodInputValues, Variant[] lastMethodInputValues, int noOfLastMethodOutputValues, Variant[] lastMethodOutputValues, long lastMethodCallTime, StatusCode lastMethodReturnStatus) {
        this.createSessionId = createSessionId;
        this.createClientName = createClientName;
        this.invocationCreationTime = invocationCreationTime;
        this.lastTransitionTime = lastTransitionTime;
        this.lastMethodCall = lastMethodCall;
        this.lastMethodSessionId = lastMethodSessionId;
        this.noOfLastMethodInputArguments = noOfLastMethodInputArguments;
        this.lastMethodInputArguments = lastMethodInputArguments;
        this.noOfLastMethodOutputArguments = noOfLastMethodOutputArguments;
        this.lastMethodOutputArguments = lastMethodOutputArguments;
        this.noOfLastMethodInputValues = noOfLastMethodInputValues;
        this.lastMethodInputValues = lastMethodInputValues;
        this.noOfLastMethodOutputValues = noOfLastMethodOutputValues;
        this.lastMethodOutputValues = lastMethodOutputValues;
        this.lastMethodCallTime = lastMethodCallTime;
        this.lastMethodReturnStatus = lastMethodReturnStatus;
    }

    public NodeId getCreateSessionId() {
        return createSessionId;
    }

    public PascalString getCreateClientName() {
        return createClientName;
    }

    public long getInvocationCreationTime() {
        return invocationCreationTime;
    }

    public long getLastTransitionTime() {
        return lastTransitionTime;
    }

    public PascalString getLastMethodCall() {
        return lastMethodCall;
    }

    public NodeId getLastMethodSessionId() {
        return lastMethodSessionId;
    }

    public int getNoOfLastMethodInputArguments() {
        return noOfLastMethodInputArguments;
    }

    public ExtensionObjectDefinition[] getLastMethodInputArguments() {
        return lastMethodInputArguments;
    }

    public int getNoOfLastMethodOutputArguments() {
        return noOfLastMethodOutputArguments;
    }

    public ExtensionObjectDefinition[] getLastMethodOutputArguments() {
        return lastMethodOutputArguments;
    }

    public int getNoOfLastMethodInputValues() {
        return noOfLastMethodInputValues;
    }

    public Variant[] getLastMethodInputValues() {
        return lastMethodInputValues;
    }

    public int getNoOfLastMethodOutputValues() {
        return noOfLastMethodOutputValues;
    }

    public Variant[] getLastMethodOutputValues() {
        return lastMethodOutputValues;
    }

    public long getLastMethodCallTime() {
        return lastMethodCallTime;
    }

    public StatusCode getLastMethodReturnStatus() {
        return lastMethodReturnStatus;
    }

    @Override
    public int getLengthInBytes() {
        return getLengthInBits() / 8;
    }

    @Override
    public int getLengthInBits() {
        return getLengthInBitsConditional(false);
    }

    public int getLengthInBitsConditional(boolean lastItem) {
        int lengthInBits = super.getLengthInBitsConditional(lastItem);
        ProgramDiagnostic2DataType _value  = this;

        // Simple field (createSessionId)
        lengthInBits += createSessionId.getLengthInBits();

        // Simple field (createClientName)
        lengthInBits += createClientName.getLengthInBits();

        // Simple field (invocationCreationTime)
        lengthInBits += 64;

        // Simple field (lastTransitionTime)
        lengthInBits += 64;

        // Simple field (lastMethodCall)
        lengthInBits += lastMethodCall.getLengthInBits();

        // Simple field (lastMethodSessionId)
        lengthInBits += lastMethodSessionId.getLengthInBits();

        // Simple field (noOfLastMethodInputArguments)
        lengthInBits += 32;

        // Array field
        if(lastMethodInputArguments != null) {
            int i=0;
            for(ExtensionObjectDefinition element : lastMethodInputArguments) {
                boolean last = ++i >= lastMethodInputArguments.length;
                lengthInBits += element.getLengthInBitsConditional(last);
            }
        }

        // Simple field (noOfLastMethodOutputArguments)
        lengthInBits += 32;

        // Array field
        if(lastMethodOutputArguments != null) {
            int i=0;
            for(ExtensionObjectDefinition element : lastMethodOutputArguments) {
                boolean last = ++i >= lastMethodOutputArguments.length;
                lengthInBits += element.getLengthInBitsConditional(last);
            }
        }

        // Simple field (noOfLastMethodInputValues)
        lengthInBits += 32;

        // Array field
        if(lastMethodInputValues != null) {
            int i=0;
            for(Variant element : lastMethodInputValues) {
                boolean last = ++i >= lastMethodInputValues.length;
                lengthInBits += element.getLengthInBitsConditional(last);
            }
        }

        // Simple field (noOfLastMethodOutputValues)
        lengthInBits += 32;

        // Array field
        if(lastMethodOutputValues != null) {
            int i=0;
            for(Variant element : lastMethodOutputValues) {
                boolean last = ++i >= lastMethodOutputValues.length;
                lengthInBits += element.getLengthInBitsConditional(last);
            }
        }

        // Simple field (lastMethodCallTime)
        lengthInBits += 64;

        // Simple field (lastMethodReturnStatus)
        lengthInBits += lastMethodReturnStatus.getLengthInBits();

        return lengthInBits;
    }

    @Override
    public MessageIO<ExtensionObjectDefinition, ExtensionObjectDefinition> getMessageIO() {
        return new ExtensionObjectDefinitionIO();
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof ProgramDiagnostic2DataType)) {
            return false;
        }
        ProgramDiagnostic2DataType that = (ProgramDiagnostic2DataType) o;
        return
            (getCreateSessionId() == that.getCreateSessionId()) &&
            (getCreateClientName() == that.getCreateClientName()) &&
            (getInvocationCreationTime() == that.getInvocationCreationTime()) &&
            (getLastTransitionTime() == that.getLastTransitionTime()) &&
            (getLastMethodCall() == that.getLastMethodCall()) &&
            (getLastMethodSessionId() == that.getLastMethodSessionId()) &&
            (getNoOfLastMethodInputArguments() == that.getNoOfLastMethodInputArguments()) &&
            (getLastMethodInputArguments() == that.getLastMethodInputArguments()) &&
            (getNoOfLastMethodOutputArguments() == that.getNoOfLastMethodOutputArguments()) &&
            (getLastMethodOutputArguments() == that.getLastMethodOutputArguments()) &&
            (getNoOfLastMethodInputValues() == that.getNoOfLastMethodInputValues()) &&
            (getLastMethodInputValues() == that.getLastMethodInputValues()) &&
            (getNoOfLastMethodOutputValues() == that.getNoOfLastMethodOutputValues()) &&
            (getLastMethodOutputValues() == that.getLastMethodOutputValues()) &&
            (getLastMethodCallTime() == that.getLastMethodCallTime()) &&
            (getLastMethodReturnStatus() == that.getLastMethodReturnStatus()) &&
            super.equals(that) &&
            true;
    }

    @Override
    public int hashCode() {
        return Objects.hash(
            super.hashCode(),
            getCreateSessionId(),
            getCreateClientName(),
            getInvocationCreationTime(),
            getLastTransitionTime(),
            getLastMethodCall(),
            getLastMethodSessionId(),
            getNoOfLastMethodInputArguments(),
            getLastMethodInputArguments(),
            getNoOfLastMethodOutputArguments(),
            getLastMethodOutputArguments(),
            getNoOfLastMethodInputValues(),
            getLastMethodInputValues(),
            getNoOfLastMethodOutputValues(),
            getLastMethodOutputValues(),
            getLastMethodCallTime(),
            getLastMethodReturnStatus()
        );
    }

    @Override
    public String toString() {
        return toString(ToStringStyle.SHORT_PREFIX_STYLE);
    }

    public String toString(ToStringStyle style) {
        return new ToStringBuilder(this, style)
            .appendSuper(super.toString(style))
            .append("createSessionId", getCreateSessionId())
            .append("createClientName", getCreateClientName())
            .append("invocationCreationTime", getInvocationCreationTime())
            .append("lastTransitionTime", getLastTransitionTime())
            .append("lastMethodCall", getLastMethodCall())
            .append("lastMethodSessionId", getLastMethodSessionId())
            .append("noOfLastMethodInputArguments", getNoOfLastMethodInputArguments())
            .append("lastMethodInputArguments", getLastMethodInputArguments())
            .append("noOfLastMethodOutputArguments", getNoOfLastMethodOutputArguments())
            .append("lastMethodOutputArguments", getLastMethodOutputArguments())
            .append("noOfLastMethodInputValues", getNoOfLastMethodInputValues())
            .append("lastMethodInputValues", getLastMethodInputValues())
            .append("noOfLastMethodOutputValues", getNoOfLastMethodOutputValues())
            .append("lastMethodOutputValues", getLastMethodOutputValues())
            .append("lastMethodCallTime", getLastMethodCallTime())
            .append("lastMethodReturnStatus", getLastMethodReturnStatus())
            .toString();
    }

}
