/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite.io;

import static org.apache.plc4x.java.spi.generation.StaticHelper.*;

import org.apache.plc4x.java.opcua.readwrite.*;
import org.apache.plc4x.java.opcua.readwrite.io.*;
import org.apache.plc4x.java.opcua.readwrite.types.*;
import org.apache.plc4x.java.api.exceptions.PlcRuntimeException;
import org.apache.plc4x.java.spi.generation.*;
import org.apache.plc4x.java.api.value.PlcValue;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.math.BigInteger;
import java.time.*;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Supplier;

// Code generated by code-generation. DO NOT EDIT.

public class ExtensionObjectDefinitionIO implements MessageIO<ExtensionObjectDefinition, ExtensionObjectDefinition> {

    private static final Logger LOGGER = LoggerFactory.getLogger(ExtensionObjectDefinitionIO.class);

    @Override
    public ExtensionObjectDefinition parse(ReadBuffer readBuffer, Object... args) throws ParseException {
        if((args == null) || (args.length != 1)) {
            throw new PlcRuntimeException("Wrong number of arguments, expected 1, but got " + args.length);
        }
        String identifier;
        if(args[0] instanceof String) {
            identifier = (String) args[0];
        } else if (args[0] instanceof String) {
            identifier = String.valueOf((String) args[0]);
        } else {
            throw new PlcRuntimeException("Argument 0 expected to be of type String or a string which is parseable but was " + args[0].getClass().getName());
        }
        return ExtensionObjectDefinitionIO.staticParse(readBuffer, identifier);
    }

    @Override
    public void serialize(WriteBuffer writeBuffer, ExtensionObjectDefinition value, Object... args) throws ParseException {
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, value);
    }

    public static ExtensionObjectDefinition staticParse(ReadBuffer readBuffer, String identifier) throws ParseException {
        readBuffer.pullContext("ExtensionObjectDefinition");
        int startPos = readBuffer.getPos();
        int curPos;

        // Switch Field (Depending on the discriminator values, passes the instantiation to a sub-type)
        ExtensionObjectDefinitionBuilder builder = null;
                if(EvaluationHelper.equals(identifier, "0")) {
            builder = NullExtensionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12758")) {
            builder = UnionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "14535")) {
            builder = KeyValuePairIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "16315")) {
            builder = AdditionalParametersTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "17550")) {
            builder = EphemeralKeyTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15530")) {
            builder = EndpointTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "18808")) {
            builder = RationalNumberIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "18809")) {
            builder = OpcuaVectorIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "18811")) {
            builder = CartesianCoordinatesIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "18813")) {
            builder = OrientationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "18815")) {
            builder = FrameIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15636")) {
            builder = IdentityMappingRuleTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "23500")) {
            builder = CurrencyUnitTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12556")) {
            builder = TrustListDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "17863")) {
            builder = DecimalDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15536")) {
            builder = DataTypeSchemaHeaderIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "14527")) {
            builder = DataTypeDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "14526")) {
            builder = FieldMetaDataIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "14595")) {
            builder = ConfigurationVersionDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15582")) {
            builder = PublishedDataSetSourceDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "14275")) {
            builder = PublishedVariableDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15599")) {
            builder = DataSetWriterDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15600")) {
            builder = DataSetWriterTransportDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15607")) {
            builder = DataSetWriterMessageDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15611")) {
            builder = PubSubGroupDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15613")) {
            builder = WriterGroupTransportDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15618")) {
            builder = WriterGroupMessageDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15619")) {
            builder = PubSubConnectionDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15620")) {
            builder = ConnectionTransportDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15504")) {
            builder = NetworkAddressDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15623")) {
            builder = ReaderGroupTransportDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15624")) {
            builder = ReaderGroupMessageDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15630")) {
            builder = DataSetReaderTransportDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15631")) {
            builder = DataSetReaderMessageDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15632")) {
            builder = SubscribedDataSetDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "14746")) {
            builder = FieldTargetDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15532")) {
            builder = PubSubConfigurationDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "23470")) {
            builder = AliasNameDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "24109")) {
            builder = UnsignedRationalNumberIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "98")) {
            builder = RolePermissionTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "99")) {
            builder = DataTypeDefinitionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "103")) {
            builder = StructureFieldIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "260")) {
            builder = NodeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "287")) {
            builder = ReferenceNodeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "298")) {
            builder = ArgumentIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "7596")) {
            builder = EnumValueTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12757")) {
            builder = OptionSetIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "8914")) {
            builder = TimeZoneDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "310")) {
            builder = ApplicationDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "391")) {
            builder = RequestHeaderIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "394")) {
            builder = ResponseHeaderIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "397")) {
            builder = ServiceFaultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "15903")) {
            builder = SessionlessInvokeRequestTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "21001")) {
            builder = SessionlessInvokeResponseTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "422")) {
            builder = FindServersRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "425")) {
            builder = FindServersResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12191")) {
            builder = ServerOnNetworkIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12192")) {
            builder = FindServersOnNetworkRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12193")) {
            builder = FindServersOnNetworkResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "306")) {
            builder = UserTokenPolicyIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "314")) {
            builder = EndpointDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "428")) {
            builder = GetEndpointsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "431")) {
            builder = GetEndpointsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "434")) {
            builder = RegisteredServerIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "437")) {
            builder = RegisterServerRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "440")) {
            builder = RegisterServerResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12892")) {
            builder = DiscoveryConfigurationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12195")) {
            builder = RegisterServer2RequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12196")) {
            builder = RegisterServer2ResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "443")) {
            builder = ChannelSecurityTokenIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "446")) {
            builder = OpenSecureChannelRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "449")) {
            builder = OpenSecureChannelResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "452")) {
            builder = CloseSecureChannelRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "455")) {
            builder = CloseSecureChannelResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "346")) {
            builder = SignedSoftwareCertificateIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "458")) {
            builder = SignatureDataIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "461")) {
            builder = CreateSessionRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "464")) {
            builder = CreateSessionResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "467")) {
            builder = ActivateSessionRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "470")) {
            builder = ActivateSessionResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "473")) {
            builder = CloseSessionRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "476")) {
            builder = CloseSessionResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "479")) {
            builder = CancelRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "482")) {
            builder = CancelResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "351")) {
            builder = NodeAttributesIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "17608")) {
            builder = GenericAttributeValueIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "378")) {
            builder = AddNodesItemIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "485")) {
            builder = AddNodesResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "488")) {
            builder = AddNodesRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "491")) {
            builder = AddNodesResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "381")) {
            builder = AddReferencesItemIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "494")) {
            builder = AddReferencesRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "497")) {
            builder = AddReferencesResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "384")) {
            builder = DeleteNodesItemIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "500")) {
            builder = DeleteNodesRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "503")) {
            builder = DeleteNodesResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "387")) {
            builder = DeleteReferencesItemIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "506")) {
            builder = DeleteReferencesRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "509")) {
            builder = DeleteReferencesResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "513")) {
            builder = ViewDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "516")) {
            builder = BrowseDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "520")) {
            builder = ReferenceDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "524")) {
            builder = BrowseResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "527")) {
            builder = BrowseRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "530")) {
            builder = BrowseResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "533")) {
            builder = BrowseNextRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "536")) {
            builder = BrowseNextResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "539")) {
            builder = RelativePathElementIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "542")) {
            builder = RelativePathIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "545")) {
            builder = BrowsePathIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "548")) {
            builder = BrowsePathTargetIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "551")) {
            builder = BrowsePathResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "554")) {
            builder = TranslateBrowsePathsToNodeIdsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "557")) {
            builder = TranslateBrowsePathsToNodeIdsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "560")) {
            builder = RegisterNodesRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "563")) {
            builder = RegisterNodesResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "566")) {
            builder = UnregisterNodesRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "569")) {
            builder = UnregisterNodesResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "333")) {
            builder = EndpointConfigurationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "572")) {
            builder = QueryDataDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "575")) {
            builder = NodeTypeDescriptionIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "579")) {
            builder = QueryDataSetIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "582")) {
            builder = NodeReferenceIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "585")) {
            builder = ContentFilterElementIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "588")) {
            builder = ContentFilterIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "591")) {
            builder = FilterOperandIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "606")) {
            builder = ContentFilterElementResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "609")) {
            builder = ContentFilterResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "612")) {
            builder = ParsingResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "615")) {
            builder = QueryFirstRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "618")) {
            builder = QueryFirstResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "621")) {
            builder = QueryNextRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "624")) {
            builder = QueryNextResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "628")) {
            builder = ReadValueIdIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "631")) {
            builder = ReadRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "634")) {
            builder = ReadResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "637")) {
            builder = HistoryReadValueIdIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "640")) {
            builder = HistoryReadResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "643")) {
            builder = HistoryReadDetailsIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "658")) {
            builder = HistoryDataIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "11218")) {
            builder = ModificationInfoIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "661")) {
            builder = HistoryEventIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "664")) {
            builder = HistoryReadRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "667")) {
            builder = HistoryReadResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "670")) {
            builder = WriteValueIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "673")) {
            builder = WriteRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "676")) {
            builder = WriteResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "679")) {
            builder = HistoryUpdateDetailsIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "697")) {
            builder = HistoryUpdateResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "700")) {
            builder = HistoryUpdateRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "703")) {
            builder = HistoryUpdateResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "706")) {
            builder = CallMethodRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "709")) {
            builder = CallMethodResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "712")) {
            builder = CallRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "715")) {
            builder = CallResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "721")) {
            builder = MonitoringFilterIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "950")) {
            builder = AggregateConfigurationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "733")) {
            builder = MonitoringFilterResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "742")) {
            builder = MonitoringParametersIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "745")) {
            builder = MonitoredItemCreateRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "748")) {
            builder = MonitoredItemCreateResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "751")) {
            builder = CreateMonitoredItemsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "754")) {
            builder = CreateMonitoredItemsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "757")) {
            builder = MonitoredItemModifyRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "760")) {
            builder = MonitoredItemModifyResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "763")) {
            builder = ModifyMonitoredItemsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "766")) {
            builder = ModifyMonitoredItemsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "769")) {
            builder = SetMonitoringModeRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "772")) {
            builder = SetMonitoringModeResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "775")) {
            builder = SetTriggeringRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "778")) {
            builder = SetTriggeringResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "781")) {
            builder = DeleteMonitoredItemsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "784")) {
            builder = DeleteMonitoredItemsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "787")) {
            builder = CreateSubscriptionRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "790")) {
            builder = CreateSubscriptionResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "793")) {
            builder = ModifySubscriptionRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "796")) {
            builder = ModifySubscriptionResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "799")) {
            builder = SetPublishingModeRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "802")) {
            builder = SetPublishingModeResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "805")) {
            builder = NotificationMessageIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "947")) {
            builder = NotificationDataIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "808")) {
            builder = MonitoredItemNotificationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "919")) {
            builder = EventFieldListIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "922")) {
            builder = HistoryEventFieldListIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "823")) {
            builder = SubscriptionAcknowledgementIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "826")) {
            builder = PublishRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "829")) {
            builder = PublishResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "832")) {
            builder = RepublishRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "835")) {
            builder = RepublishResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "838")) {
            builder = TransferResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "841")) {
            builder = TransferSubscriptionsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "844")) {
            builder = TransferSubscriptionsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "847")) {
            builder = DeleteSubscriptionsRequestIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "850")) {
            builder = DeleteSubscriptionsResponseIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "340")) {
            builder = BuildInfoIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "855")) {
            builder = RedundantServerDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "11945")) {
            builder = EndpointUrlListDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "11946")) {
            builder = NetworkGroupDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "858")) {
            builder = SamplingIntervalDiagnosticsDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "861")) {
            builder = ServerDiagnosticsSummaryDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "864")) {
            builder = ServerStatusDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "867")) {
            builder = SessionDiagnosticsDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "870")) {
            builder = SessionSecurityDiagnosticsDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "873")) {
            builder = ServiceCounterDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "301")) {
            builder = StatusResultIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "876")) {
            builder = SubscriptionDiagnosticsDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "879")) {
            builder = ModelChangeStructureDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "899")) {
            builder = SemanticChangeStructureDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "886")) {
            builder = RangeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "889")) {
            builder = EUInformationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12173")) {
            builder = ComplexNumberTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12174")) {
            builder = DoubleComplexNumberTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12081")) {
            builder = AxisInformationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "12082")) {
            builder = XVTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "896")) {
            builder = ProgramDiagnosticDataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "24035")) {
            builder = ProgramDiagnostic2DataTypeIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "893")) {
            builder = AnnotationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "811")) {
            builder = DataChangeNotificationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "916")) {
            builder = EventNotificationListIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "820")) {
            builder = StatusChangeNotificationIO.staticParse(readBuffer);
        } else 
                if(EvaluationHelper.equals(identifier, "316")) {
            builder = UserIdentityTokenIO.staticParse(readBuffer);
        }
        if (builder == null) {
            throw new ParseException("Unsupported case for discriminated type");
        }

        readBuffer.closeContext("ExtensionObjectDefinition");
        // Create the instance
        return builder.build();
    }

    public static void staticSerialize(WriteBuffer writeBuffer, ExtensionObjectDefinition _value) throws ParseException {
        int startPos = writeBuffer.getPos();
        writeBuffer.pushContext("ExtensionObjectDefinition");

        // Switch field (Depending on the discriminator values, passes the instantiation to a sub-type)
        if(_value instanceof NullExtension) {
            NullExtensionIO.staticSerialize(writeBuffer, (NullExtension) _value);
        } else 
        if(_value instanceof Union) {
            UnionIO.staticSerialize(writeBuffer, (Union) _value);
        } else 
        if(_value instanceof KeyValuePair) {
            KeyValuePairIO.staticSerialize(writeBuffer, (KeyValuePair) _value);
        } else 
        if(_value instanceof AdditionalParametersType) {
            AdditionalParametersTypeIO.staticSerialize(writeBuffer, (AdditionalParametersType) _value);
        } else 
        if(_value instanceof EphemeralKeyType) {
            EphemeralKeyTypeIO.staticSerialize(writeBuffer, (EphemeralKeyType) _value);
        } else 
        if(_value instanceof EndpointType) {
            EndpointTypeIO.staticSerialize(writeBuffer, (EndpointType) _value);
        } else 
        if(_value instanceof RationalNumber) {
            RationalNumberIO.staticSerialize(writeBuffer, (RationalNumber) _value);
        } else 
        if(_value instanceof OpcuaVector) {
            OpcuaVectorIO.staticSerialize(writeBuffer, (OpcuaVector) _value);
        } else 
        if(_value instanceof CartesianCoordinates) {
            CartesianCoordinatesIO.staticSerialize(writeBuffer, (CartesianCoordinates) _value);
        } else 
        if(_value instanceof Orientation) {
            OrientationIO.staticSerialize(writeBuffer, (Orientation) _value);
        } else 
        if(_value instanceof Frame) {
            FrameIO.staticSerialize(writeBuffer, (Frame) _value);
        } else 
        if(_value instanceof IdentityMappingRuleType) {
            IdentityMappingRuleTypeIO.staticSerialize(writeBuffer, (IdentityMappingRuleType) _value);
        } else 
        if(_value instanceof CurrencyUnitType) {
            CurrencyUnitTypeIO.staticSerialize(writeBuffer, (CurrencyUnitType) _value);
        } else 
        if(_value instanceof TrustListDataType) {
            TrustListDataTypeIO.staticSerialize(writeBuffer, (TrustListDataType) _value);
        } else 
        if(_value instanceof DecimalDataType) {
            DecimalDataTypeIO.staticSerialize(writeBuffer, (DecimalDataType) _value);
        } else 
        if(_value instanceof DataTypeSchemaHeader) {
            DataTypeSchemaHeaderIO.staticSerialize(writeBuffer, (DataTypeSchemaHeader) _value);
        } else 
        if(_value instanceof DataTypeDescription) {
            DataTypeDescriptionIO.staticSerialize(writeBuffer, (DataTypeDescription) _value);
        } else 
        if(_value instanceof FieldMetaData) {
            FieldMetaDataIO.staticSerialize(writeBuffer, (FieldMetaData) _value);
        } else 
        if(_value instanceof ConfigurationVersionDataType) {
            ConfigurationVersionDataTypeIO.staticSerialize(writeBuffer, (ConfigurationVersionDataType) _value);
        } else 
        if(_value instanceof PublishedDataSetSourceDataType) {
            PublishedDataSetSourceDataTypeIO.staticSerialize(writeBuffer, (PublishedDataSetSourceDataType) _value);
        } else 
        if(_value instanceof PublishedVariableDataType) {
            PublishedVariableDataTypeIO.staticSerialize(writeBuffer, (PublishedVariableDataType) _value);
        } else 
        if(_value instanceof DataSetWriterDataType) {
            DataSetWriterDataTypeIO.staticSerialize(writeBuffer, (DataSetWriterDataType) _value);
        } else 
        if(_value instanceof DataSetWriterTransportDataType) {
            DataSetWriterTransportDataTypeIO.staticSerialize(writeBuffer, (DataSetWriterTransportDataType) _value);
        } else 
        if(_value instanceof DataSetWriterMessageDataType) {
            DataSetWriterMessageDataTypeIO.staticSerialize(writeBuffer, (DataSetWriterMessageDataType) _value);
        } else 
        if(_value instanceof PubSubGroupDataType) {
            PubSubGroupDataTypeIO.staticSerialize(writeBuffer, (PubSubGroupDataType) _value);
        } else 
        if(_value instanceof WriterGroupTransportDataType) {
            WriterGroupTransportDataTypeIO.staticSerialize(writeBuffer, (WriterGroupTransportDataType) _value);
        } else 
        if(_value instanceof WriterGroupMessageDataType) {
            WriterGroupMessageDataTypeIO.staticSerialize(writeBuffer, (WriterGroupMessageDataType) _value);
        } else 
        if(_value instanceof PubSubConnectionDataType) {
            PubSubConnectionDataTypeIO.staticSerialize(writeBuffer, (PubSubConnectionDataType) _value);
        } else 
        if(_value instanceof ConnectionTransportDataType) {
            ConnectionTransportDataTypeIO.staticSerialize(writeBuffer, (ConnectionTransportDataType) _value);
        } else 
        if(_value instanceof NetworkAddressDataType) {
            NetworkAddressDataTypeIO.staticSerialize(writeBuffer, (NetworkAddressDataType) _value);
        } else 
        if(_value instanceof ReaderGroupTransportDataType) {
            ReaderGroupTransportDataTypeIO.staticSerialize(writeBuffer, (ReaderGroupTransportDataType) _value);
        } else 
        if(_value instanceof ReaderGroupMessageDataType) {
            ReaderGroupMessageDataTypeIO.staticSerialize(writeBuffer, (ReaderGroupMessageDataType) _value);
        } else 
        if(_value instanceof DataSetReaderTransportDataType) {
            DataSetReaderTransportDataTypeIO.staticSerialize(writeBuffer, (DataSetReaderTransportDataType) _value);
        } else 
        if(_value instanceof DataSetReaderMessageDataType) {
            DataSetReaderMessageDataTypeIO.staticSerialize(writeBuffer, (DataSetReaderMessageDataType) _value);
        } else 
        if(_value instanceof SubscribedDataSetDataType) {
            SubscribedDataSetDataTypeIO.staticSerialize(writeBuffer, (SubscribedDataSetDataType) _value);
        } else 
        if(_value instanceof FieldTargetDataType) {
            FieldTargetDataTypeIO.staticSerialize(writeBuffer, (FieldTargetDataType) _value);
        } else 
        if(_value instanceof PubSubConfigurationDataType) {
            PubSubConfigurationDataTypeIO.staticSerialize(writeBuffer, (PubSubConfigurationDataType) _value);
        } else 
        if(_value instanceof AliasNameDataType) {
            AliasNameDataTypeIO.staticSerialize(writeBuffer, (AliasNameDataType) _value);
        } else 
        if(_value instanceof UnsignedRationalNumber) {
            UnsignedRationalNumberIO.staticSerialize(writeBuffer, (UnsignedRationalNumber) _value);
        } else 
        if(_value instanceof RolePermissionType) {
            RolePermissionTypeIO.staticSerialize(writeBuffer, (RolePermissionType) _value);
        } else 
        if(_value instanceof DataTypeDefinition) {
            DataTypeDefinitionIO.staticSerialize(writeBuffer, (DataTypeDefinition) _value);
        } else 
        if(_value instanceof StructureField) {
            StructureFieldIO.staticSerialize(writeBuffer, (StructureField) _value);
        } else 
        if(_value instanceof Node) {
            NodeIO.staticSerialize(writeBuffer, (Node) _value);
        } else 
        if(_value instanceof ReferenceNode) {
            ReferenceNodeIO.staticSerialize(writeBuffer, (ReferenceNode) _value);
        } else 
        if(_value instanceof Argument) {
            ArgumentIO.staticSerialize(writeBuffer, (Argument) _value);
        } else 
        if(_value instanceof EnumValueType) {
            EnumValueTypeIO.staticSerialize(writeBuffer, (EnumValueType) _value);
        } else 
        if(_value instanceof OptionSet) {
            OptionSetIO.staticSerialize(writeBuffer, (OptionSet) _value);
        } else 
        if(_value instanceof TimeZoneDataType) {
            TimeZoneDataTypeIO.staticSerialize(writeBuffer, (TimeZoneDataType) _value);
        } else 
        if(_value instanceof ApplicationDescription) {
            ApplicationDescriptionIO.staticSerialize(writeBuffer, (ApplicationDescription) _value);
        } else 
        if(_value instanceof RequestHeader) {
            RequestHeaderIO.staticSerialize(writeBuffer, (RequestHeader) _value);
        } else 
        if(_value instanceof ResponseHeader) {
            ResponseHeaderIO.staticSerialize(writeBuffer, (ResponseHeader) _value);
        } else 
        if(_value instanceof ServiceFault) {
            ServiceFaultIO.staticSerialize(writeBuffer, (ServiceFault) _value);
        } else 
        if(_value instanceof SessionlessInvokeRequestType) {
            SessionlessInvokeRequestTypeIO.staticSerialize(writeBuffer, (SessionlessInvokeRequestType) _value);
        } else 
        if(_value instanceof SessionlessInvokeResponseType) {
            SessionlessInvokeResponseTypeIO.staticSerialize(writeBuffer, (SessionlessInvokeResponseType) _value);
        } else 
        if(_value instanceof FindServersRequest) {
            FindServersRequestIO.staticSerialize(writeBuffer, (FindServersRequest) _value);
        } else 
        if(_value instanceof FindServersResponse) {
            FindServersResponseIO.staticSerialize(writeBuffer, (FindServersResponse) _value);
        } else 
        if(_value instanceof ServerOnNetwork) {
            ServerOnNetworkIO.staticSerialize(writeBuffer, (ServerOnNetwork) _value);
        } else 
        if(_value instanceof FindServersOnNetworkRequest) {
            FindServersOnNetworkRequestIO.staticSerialize(writeBuffer, (FindServersOnNetworkRequest) _value);
        } else 
        if(_value instanceof FindServersOnNetworkResponse) {
            FindServersOnNetworkResponseIO.staticSerialize(writeBuffer, (FindServersOnNetworkResponse) _value);
        } else 
        if(_value instanceof UserTokenPolicy) {
            UserTokenPolicyIO.staticSerialize(writeBuffer, (UserTokenPolicy) _value);
        } else 
        if(_value instanceof EndpointDescription) {
            EndpointDescriptionIO.staticSerialize(writeBuffer, (EndpointDescription) _value);
        } else 
        if(_value instanceof GetEndpointsRequest) {
            GetEndpointsRequestIO.staticSerialize(writeBuffer, (GetEndpointsRequest) _value);
        } else 
        if(_value instanceof GetEndpointsResponse) {
            GetEndpointsResponseIO.staticSerialize(writeBuffer, (GetEndpointsResponse) _value);
        } else 
        if(_value instanceof RegisteredServer) {
            RegisteredServerIO.staticSerialize(writeBuffer, (RegisteredServer) _value);
        } else 
        if(_value instanceof RegisterServerRequest) {
            RegisterServerRequestIO.staticSerialize(writeBuffer, (RegisterServerRequest) _value);
        } else 
        if(_value instanceof RegisterServerResponse) {
            RegisterServerResponseIO.staticSerialize(writeBuffer, (RegisterServerResponse) _value);
        } else 
        if(_value instanceof DiscoveryConfiguration) {
            DiscoveryConfigurationIO.staticSerialize(writeBuffer, (DiscoveryConfiguration) _value);
        } else 
        if(_value instanceof RegisterServer2Request) {
            RegisterServer2RequestIO.staticSerialize(writeBuffer, (RegisterServer2Request) _value);
        } else 
        if(_value instanceof RegisterServer2Response) {
            RegisterServer2ResponseIO.staticSerialize(writeBuffer, (RegisterServer2Response) _value);
        } else 
        if(_value instanceof ChannelSecurityToken) {
            ChannelSecurityTokenIO.staticSerialize(writeBuffer, (ChannelSecurityToken) _value);
        } else 
        if(_value instanceof OpenSecureChannelRequest) {
            OpenSecureChannelRequestIO.staticSerialize(writeBuffer, (OpenSecureChannelRequest) _value);
        } else 
        if(_value instanceof OpenSecureChannelResponse) {
            OpenSecureChannelResponseIO.staticSerialize(writeBuffer, (OpenSecureChannelResponse) _value);
        } else 
        if(_value instanceof CloseSecureChannelRequest) {
            CloseSecureChannelRequestIO.staticSerialize(writeBuffer, (CloseSecureChannelRequest) _value);
        } else 
        if(_value instanceof CloseSecureChannelResponse) {
            CloseSecureChannelResponseIO.staticSerialize(writeBuffer, (CloseSecureChannelResponse) _value);
        } else 
        if(_value instanceof SignedSoftwareCertificate) {
            SignedSoftwareCertificateIO.staticSerialize(writeBuffer, (SignedSoftwareCertificate) _value);
        } else 
        if(_value instanceof SignatureData) {
            SignatureDataIO.staticSerialize(writeBuffer, (SignatureData) _value);
        } else 
        if(_value instanceof CreateSessionRequest) {
            CreateSessionRequestIO.staticSerialize(writeBuffer, (CreateSessionRequest) _value);
        } else 
        if(_value instanceof CreateSessionResponse) {
            CreateSessionResponseIO.staticSerialize(writeBuffer, (CreateSessionResponse) _value);
        } else 
        if(_value instanceof ActivateSessionRequest) {
            ActivateSessionRequestIO.staticSerialize(writeBuffer, (ActivateSessionRequest) _value);
        } else 
        if(_value instanceof ActivateSessionResponse) {
            ActivateSessionResponseIO.staticSerialize(writeBuffer, (ActivateSessionResponse) _value);
        } else 
        if(_value instanceof CloseSessionRequest) {
            CloseSessionRequestIO.staticSerialize(writeBuffer, (CloseSessionRequest) _value);
        } else 
        if(_value instanceof CloseSessionResponse) {
            CloseSessionResponseIO.staticSerialize(writeBuffer, (CloseSessionResponse) _value);
        } else 
        if(_value instanceof CancelRequest) {
            CancelRequestIO.staticSerialize(writeBuffer, (CancelRequest) _value);
        } else 
        if(_value instanceof CancelResponse) {
            CancelResponseIO.staticSerialize(writeBuffer, (CancelResponse) _value);
        } else 
        if(_value instanceof NodeAttributes) {
            NodeAttributesIO.staticSerialize(writeBuffer, (NodeAttributes) _value);
        } else 
        if(_value instanceof GenericAttributeValue) {
            GenericAttributeValueIO.staticSerialize(writeBuffer, (GenericAttributeValue) _value);
        } else 
        if(_value instanceof AddNodesItem) {
            AddNodesItemIO.staticSerialize(writeBuffer, (AddNodesItem) _value);
        } else 
        if(_value instanceof AddNodesResult) {
            AddNodesResultIO.staticSerialize(writeBuffer, (AddNodesResult) _value);
        } else 
        if(_value instanceof AddNodesRequest) {
            AddNodesRequestIO.staticSerialize(writeBuffer, (AddNodesRequest) _value);
        } else 
        if(_value instanceof AddNodesResponse) {
            AddNodesResponseIO.staticSerialize(writeBuffer, (AddNodesResponse) _value);
        } else 
        if(_value instanceof AddReferencesItem) {
            AddReferencesItemIO.staticSerialize(writeBuffer, (AddReferencesItem) _value);
        } else 
        if(_value instanceof AddReferencesRequest) {
            AddReferencesRequestIO.staticSerialize(writeBuffer, (AddReferencesRequest) _value);
        } else 
        if(_value instanceof AddReferencesResponse) {
            AddReferencesResponseIO.staticSerialize(writeBuffer, (AddReferencesResponse) _value);
        } else 
        if(_value instanceof DeleteNodesItem) {
            DeleteNodesItemIO.staticSerialize(writeBuffer, (DeleteNodesItem) _value);
        } else 
        if(_value instanceof DeleteNodesRequest) {
            DeleteNodesRequestIO.staticSerialize(writeBuffer, (DeleteNodesRequest) _value);
        } else 
        if(_value instanceof DeleteNodesResponse) {
            DeleteNodesResponseIO.staticSerialize(writeBuffer, (DeleteNodesResponse) _value);
        } else 
        if(_value instanceof DeleteReferencesItem) {
            DeleteReferencesItemIO.staticSerialize(writeBuffer, (DeleteReferencesItem) _value);
        } else 
        if(_value instanceof DeleteReferencesRequest) {
            DeleteReferencesRequestIO.staticSerialize(writeBuffer, (DeleteReferencesRequest) _value);
        } else 
        if(_value instanceof DeleteReferencesResponse) {
            DeleteReferencesResponseIO.staticSerialize(writeBuffer, (DeleteReferencesResponse) _value);
        } else 
        if(_value instanceof ViewDescription) {
            ViewDescriptionIO.staticSerialize(writeBuffer, (ViewDescription) _value);
        } else 
        if(_value instanceof BrowseDescription) {
            BrowseDescriptionIO.staticSerialize(writeBuffer, (BrowseDescription) _value);
        } else 
        if(_value instanceof ReferenceDescription) {
            ReferenceDescriptionIO.staticSerialize(writeBuffer, (ReferenceDescription) _value);
        } else 
        if(_value instanceof BrowseResult) {
            BrowseResultIO.staticSerialize(writeBuffer, (BrowseResult) _value);
        } else 
        if(_value instanceof BrowseRequest) {
            BrowseRequestIO.staticSerialize(writeBuffer, (BrowseRequest) _value);
        } else 
        if(_value instanceof BrowseResponse) {
            BrowseResponseIO.staticSerialize(writeBuffer, (BrowseResponse) _value);
        } else 
        if(_value instanceof BrowseNextRequest) {
            BrowseNextRequestIO.staticSerialize(writeBuffer, (BrowseNextRequest) _value);
        } else 
        if(_value instanceof BrowseNextResponse) {
            BrowseNextResponseIO.staticSerialize(writeBuffer, (BrowseNextResponse) _value);
        } else 
        if(_value instanceof RelativePathElement) {
            RelativePathElementIO.staticSerialize(writeBuffer, (RelativePathElement) _value);
        } else 
        if(_value instanceof RelativePath) {
            RelativePathIO.staticSerialize(writeBuffer, (RelativePath) _value);
        } else 
        if(_value instanceof BrowsePath) {
            BrowsePathIO.staticSerialize(writeBuffer, (BrowsePath) _value);
        } else 
        if(_value instanceof BrowsePathTarget) {
            BrowsePathTargetIO.staticSerialize(writeBuffer, (BrowsePathTarget) _value);
        } else 
        if(_value instanceof BrowsePathResult) {
            BrowsePathResultIO.staticSerialize(writeBuffer, (BrowsePathResult) _value);
        } else 
        if(_value instanceof TranslateBrowsePathsToNodeIdsRequest) {
            TranslateBrowsePathsToNodeIdsRequestIO.staticSerialize(writeBuffer, (TranslateBrowsePathsToNodeIdsRequest) _value);
        } else 
        if(_value instanceof TranslateBrowsePathsToNodeIdsResponse) {
            TranslateBrowsePathsToNodeIdsResponseIO.staticSerialize(writeBuffer, (TranslateBrowsePathsToNodeIdsResponse) _value);
        } else 
        if(_value instanceof RegisterNodesRequest) {
            RegisterNodesRequestIO.staticSerialize(writeBuffer, (RegisterNodesRequest) _value);
        } else 
        if(_value instanceof RegisterNodesResponse) {
            RegisterNodesResponseIO.staticSerialize(writeBuffer, (RegisterNodesResponse) _value);
        } else 
        if(_value instanceof UnregisterNodesRequest) {
            UnregisterNodesRequestIO.staticSerialize(writeBuffer, (UnregisterNodesRequest) _value);
        } else 
        if(_value instanceof UnregisterNodesResponse) {
            UnregisterNodesResponseIO.staticSerialize(writeBuffer, (UnregisterNodesResponse) _value);
        } else 
        if(_value instanceof EndpointConfiguration) {
            EndpointConfigurationIO.staticSerialize(writeBuffer, (EndpointConfiguration) _value);
        } else 
        if(_value instanceof QueryDataDescription) {
            QueryDataDescriptionIO.staticSerialize(writeBuffer, (QueryDataDescription) _value);
        } else 
        if(_value instanceof NodeTypeDescription) {
            NodeTypeDescriptionIO.staticSerialize(writeBuffer, (NodeTypeDescription) _value);
        } else 
        if(_value instanceof QueryDataSet) {
            QueryDataSetIO.staticSerialize(writeBuffer, (QueryDataSet) _value);
        } else 
        if(_value instanceof NodeReference) {
            NodeReferenceIO.staticSerialize(writeBuffer, (NodeReference) _value);
        } else 
        if(_value instanceof ContentFilterElement) {
            ContentFilterElementIO.staticSerialize(writeBuffer, (ContentFilterElement) _value);
        } else 
        if(_value instanceof ContentFilter) {
            ContentFilterIO.staticSerialize(writeBuffer, (ContentFilter) _value);
        } else 
        if(_value instanceof FilterOperand) {
            FilterOperandIO.staticSerialize(writeBuffer, (FilterOperand) _value);
        } else 
        if(_value instanceof ContentFilterElementResult) {
            ContentFilterElementResultIO.staticSerialize(writeBuffer, (ContentFilterElementResult) _value);
        } else 
        if(_value instanceof ContentFilterResult) {
            ContentFilterResultIO.staticSerialize(writeBuffer, (ContentFilterResult) _value);
        } else 
        if(_value instanceof ParsingResult) {
            ParsingResultIO.staticSerialize(writeBuffer, (ParsingResult) _value);
        } else 
        if(_value instanceof QueryFirstRequest) {
            QueryFirstRequestIO.staticSerialize(writeBuffer, (QueryFirstRequest) _value);
        } else 
        if(_value instanceof QueryFirstResponse) {
            QueryFirstResponseIO.staticSerialize(writeBuffer, (QueryFirstResponse) _value);
        } else 
        if(_value instanceof QueryNextRequest) {
            QueryNextRequestIO.staticSerialize(writeBuffer, (QueryNextRequest) _value);
        } else 
        if(_value instanceof QueryNextResponse) {
            QueryNextResponseIO.staticSerialize(writeBuffer, (QueryNextResponse) _value);
        } else 
        if(_value instanceof ReadValueId) {
            ReadValueIdIO.staticSerialize(writeBuffer, (ReadValueId) _value);
        } else 
        if(_value instanceof ReadRequest) {
            ReadRequestIO.staticSerialize(writeBuffer, (ReadRequest) _value);
        } else 
        if(_value instanceof ReadResponse) {
            ReadResponseIO.staticSerialize(writeBuffer, (ReadResponse) _value);
        } else 
        if(_value instanceof HistoryReadValueId) {
            HistoryReadValueIdIO.staticSerialize(writeBuffer, (HistoryReadValueId) _value);
        } else 
        if(_value instanceof HistoryReadResult) {
            HistoryReadResultIO.staticSerialize(writeBuffer, (HistoryReadResult) _value);
        } else 
        if(_value instanceof HistoryReadDetails) {
            HistoryReadDetailsIO.staticSerialize(writeBuffer, (HistoryReadDetails) _value);
        } else 
        if(_value instanceof HistoryData) {
            HistoryDataIO.staticSerialize(writeBuffer, (HistoryData) _value);
        } else 
        if(_value instanceof ModificationInfo) {
            ModificationInfoIO.staticSerialize(writeBuffer, (ModificationInfo) _value);
        } else 
        if(_value instanceof HistoryEvent) {
            HistoryEventIO.staticSerialize(writeBuffer, (HistoryEvent) _value);
        } else 
        if(_value instanceof HistoryReadRequest) {
            HistoryReadRequestIO.staticSerialize(writeBuffer, (HistoryReadRequest) _value);
        } else 
        if(_value instanceof HistoryReadResponse) {
            HistoryReadResponseIO.staticSerialize(writeBuffer, (HistoryReadResponse) _value);
        } else 
        if(_value instanceof WriteValue) {
            WriteValueIO.staticSerialize(writeBuffer, (WriteValue) _value);
        } else 
        if(_value instanceof WriteRequest) {
            WriteRequestIO.staticSerialize(writeBuffer, (WriteRequest) _value);
        } else 
        if(_value instanceof WriteResponse) {
            WriteResponseIO.staticSerialize(writeBuffer, (WriteResponse) _value);
        } else 
        if(_value instanceof HistoryUpdateDetails) {
            HistoryUpdateDetailsIO.staticSerialize(writeBuffer, (HistoryUpdateDetails) _value);
        } else 
        if(_value instanceof HistoryUpdateResult) {
            HistoryUpdateResultIO.staticSerialize(writeBuffer, (HistoryUpdateResult) _value);
        } else 
        if(_value instanceof HistoryUpdateRequest) {
            HistoryUpdateRequestIO.staticSerialize(writeBuffer, (HistoryUpdateRequest) _value);
        } else 
        if(_value instanceof HistoryUpdateResponse) {
            HistoryUpdateResponseIO.staticSerialize(writeBuffer, (HistoryUpdateResponse) _value);
        } else 
        if(_value instanceof CallMethodRequest) {
            CallMethodRequestIO.staticSerialize(writeBuffer, (CallMethodRequest) _value);
        } else 
        if(_value instanceof CallMethodResult) {
            CallMethodResultIO.staticSerialize(writeBuffer, (CallMethodResult) _value);
        } else 
        if(_value instanceof CallRequest) {
            CallRequestIO.staticSerialize(writeBuffer, (CallRequest) _value);
        } else 
        if(_value instanceof CallResponse) {
            CallResponseIO.staticSerialize(writeBuffer, (CallResponse) _value);
        } else 
        if(_value instanceof MonitoringFilter) {
            MonitoringFilterIO.staticSerialize(writeBuffer, (MonitoringFilter) _value);
        } else 
        if(_value instanceof AggregateConfiguration) {
            AggregateConfigurationIO.staticSerialize(writeBuffer, (AggregateConfiguration) _value);
        } else 
        if(_value instanceof MonitoringFilterResult) {
            MonitoringFilterResultIO.staticSerialize(writeBuffer, (MonitoringFilterResult) _value);
        } else 
        if(_value instanceof MonitoringParameters) {
            MonitoringParametersIO.staticSerialize(writeBuffer, (MonitoringParameters) _value);
        } else 
        if(_value instanceof MonitoredItemCreateRequest) {
            MonitoredItemCreateRequestIO.staticSerialize(writeBuffer, (MonitoredItemCreateRequest) _value);
        } else 
        if(_value instanceof MonitoredItemCreateResult) {
            MonitoredItemCreateResultIO.staticSerialize(writeBuffer, (MonitoredItemCreateResult) _value);
        } else 
        if(_value instanceof CreateMonitoredItemsRequest) {
            CreateMonitoredItemsRequestIO.staticSerialize(writeBuffer, (CreateMonitoredItemsRequest) _value);
        } else 
        if(_value instanceof CreateMonitoredItemsResponse) {
            CreateMonitoredItemsResponseIO.staticSerialize(writeBuffer, (CreateMonitoredItemsResponse) _value);
        } else 
        if(_value instanceof MonitoredItemModifyRequest) {
            MonitoredItemModifyRequestIO.staticSerialize(writeBuffer, (MonitoredItemModifyRequest) _value);
        } else 
        if(_value instanceof MonitoredItemModifyResult) {
            MonitoredItemModifyResultIO.staticSerialize(writeBuffer, (MonitoredItemModifyResult) _value);
        } else 
        if(_value instanceof ModifyMonitoredItemsRequest) {
            ModifyMonitoredItemsRequestIO.staticSerialize(writeBuffer, (ModifyMonitoredItemsRequest) _value);
        } else 
        if(_value instanceof ModifyMonitoredItemsResponse) {
            ModifyMonitoredItemsResponseIO.staticSerialize(writeBuffer, (ModifyMonitoredItemsResponse) _value);
        } else 
        if(_value instanceof SetMonitoringModeRequest) {
            SetMonitoringModeRequestIO.staticSerialize(writeBuffer, (SetMonitoringModeRequest) _value);
        } else 
        if(_value instanceof SetMonitoringModeResponse) {
            SetMonitoringModeResponseIO.staticSerialize(writeBuffer, (SetMonitoringModeResponse) _value);
        } else 
        if(_value instanceof SetTriggeringRequest) {
            SetTriggeringRequestIO.staticSerialize(writeBuffer, (SetTriggeringRequest) _value);
        } else 
        if(_value instanceof SetTriggeringResponse) {
            SetTriggeringResponseIO.staticSerialize(writeBuffer, (SetTriggeringResponse) _value);
        } else 
        if(_value instanceof DeleteMonitoredItemsRequest) {
            DeleteMonitoredItemsRequestIO.staticSerialize(writeBuffer, (DeleteMonitoredItemsRequest) _value);
        } else 
        if(_value instanceof DeleteMonitoredItemsResponse) {
            DeleteMonitoredItemsResponseIO.staticSerialize(writeBuffer, (DeleteMonitoredItemsResponse) _value);
        } else 
        if(_value instanceof CreateSubscriptionRequest) {
            CreateSubscriptionRequestIO.staticSerialize(writeBuffer, (CreateSubscriptionRequest) _value);
        } else 
        if(_value instanceof CreateSubscriptionResponse) {
            CreateSubscriptionResponseIO.staticSerialize(writeBuffer, (CreateSubscriptionResponse) _value);
        } else 
        if(_value instanceof ModifySubscriptionRequest) {
            ModifySubscriptionRequestIO.staticSerialize(writeBuffer, (ModifySubscriptionRequest) _value);
        } else 
        if(_value instanceof ModifySubscriptionResponse) {
            ModifySubscriptionResponseIO.staticSerialize(writeBuffer, (ModifySubscriptionResponse) _value);
        } else 
        if(_value instanceof SetPublishingModeRequest) {
            SetPublishingModeRequestIO.staticSerialize(writeBuffer, (SetPublishingModeRequest) _value);
        } else 
        if(_value instanceof SetPublishingModeResponse) {
            SetPublishingModeResponseIO.staticSerialize(writeBuffer, (SetPublishingModeResponse) _value);
        } else 
        if(_value instanceof NotificationMessage) {
            NotificationMessageIO.staticSerialize(writeBuffer, (NotificationMessage) _value);
        } else 
        if(_value instanceof NotificationData) {
            NotificationDataIO.staticSerialize(writeBuffer, (NotificationData) _value);
        } else 
        if(_value instanceof MonitoredItemNotification) {
            MonitoredItemNotificationIO.staticSerialize(writeBuffer, (MonitoredItemNotification) _value);
        } else 
        if(_value instanceof EventFieldList) {
            EventFieldListIO.staticSerialize(writeBuffer, (EventFieldList) _value);
        } else 
        if(_value instanceof HistoryEventFieldList) {
            HistoryEventFieldListIO.staticSerialize(writeBuffer, (HistoryEventFieldList) _value);
        } else 
        if(_value instanceof SubscriptionAcknowledgement) {
            SubscriptionAcknowledgementIO.staticSerialize(writeBuffer, (SubscriptionAcknowledgement) _value);
        } else 
        if(_value instanceof PublishRequest) {
            PublishRequestIO.staticSerialize(writeBuffer, (PublishRequest) _value);
        } else 
        if(_value instanceof PublishResponse) {
            PublishResponseIO.staticSerialize(writeBuffer, (PublishResponse) _value);
        } else 
        if(_value instanceof RepublishRequest) {
            RepublishRequestIO.staticSerialize(writeBuffer, (RepublishRequest) _value);
        } else 
        if(_value instanceof RepublishResponse) {
            RepublishResponseIO.staticSerialize(writeBuffer, (RepublishResponse) _value);
        } else 
        if(_value instanceof TransferResult) {
            TransferResultIO.staticSerialize(writeBuffer, (TransferResult) _value);
        } else 
        if(_value instanceof TransferSubscriptionsRequest) {
            TransferSubscriptionsRequestIO.staticSerialize(writeBuffer, (TransferSubscriptionsRequest) _value);
        } else 
        if(_value instanceof TransferSubscriptionsResponse) {
            TransferSubscriptionsResponseIO.staticSerialize(writeBuffer, (TransferSubscriptionsResponse) _value);
        } else 
        if(_value instanceof DeleteSubscriptionsRequest) {
            DeleteSubscriptionsRequestIO.staticSerialize(writeBuffer, (DeleteSubscriptionsRequest) _value);
        } else 
        if(_value instanceof DeleteSubscriptionsResponse) {
            DeleteSubscriptionsResponseIO.staticSerialize(writeBuffer, (DeleteSubscriptionsResponse) _value);
        } else 
        if(_value instanceof BuildInfo) {
            BuildInfoIO.staticSerialize(writeBuffer, (BuildInfo) _value);
        } else 
        if(_value instanceof RedundantServerDataType) {
            RedundantServerDataTypeIO.staticSerialize(writeBuffer, (RedundantServerDataType) _value);
        } else 
        if(_value instanceof EndpointUrlListDataType) {
            EndpointUrlListDataTypeIO.staticSerialize(writeBuffer, (EndpointUrlListDataType) _value);
        } else 
        if(_value instanceof NetworkGroupDataType) {
            NetworkGroupDataTypeIO.staticSerialize(writeBuffer, (NetworkGroupDataType) _value);
        } else 
        if(_value instanceof SamplingIntervalDiagnosticsDataType) {
            SamplingIntervalDiagnosticsDataTypeIO.staticSerialize(writeBuffer, (SamplingIntervalDiagnosticsDataType) _value);
        } else 
        if(_value instanceof ServerDiagnosticsSummaryDataType) {
            ServerDiagnosticsSummaryDataTypeIO.staticSerialize(writeBuffer, (ServerDiagnosticsSummaryDataType) _value);
        } else 
        if(_value instanceof ServerStatusDataType) {
            ServerStatusDataTypeIO.staticSerialize(writeBuffer, (ServerStatusDataType) _value);
        } else 
        if(_value instanceof SessionDiagnosticsDataType) {
            SessionDiagnosticsDataTypeIO.staticSerialize(writeBuffer, (SessionDiagnosticsDataType) _value);
        } else 
        if(_value instanceof SessionSecurityDiagnosticsDataType) {
            SessionSecurityDiagnosticsDataTypeIO.staticSerialize(writeBuffer, (SessionSecurityDiagnosticsDataType) _value);
        } else 
        if(_value instanceof ServiceCounterDataType) {
            ServiceCounterDataTypeIO.staticSerialize(writeBuffer, (ServiceCounterDataType) _value);
        } else 
        if(_value instanceof StatusResult) {
            StatusResultIO.staticSerialize(writeBuffer, (StatusResult) _value);
        } else 
        if(_value instanceof SubscriptionDiagnosticsDataType) {
            SubscriptionDiagnosticsDataTypeIO.staticSerialize(writeBuffer, (SubscriptionDiagnosticsDataType) _value);
        } else 
        if(_value instanceof ModelChangeStructureDataType) {
            ModelChangeStructureDataTypeIO.staticSerialize(writeBuffer, (ModelChangeStructureDataType) _value);
        } else 
        if(_value instanceof SemanticChangeStructureDataType) {
            SemanticChangeStructureDataTypeIO.staticSerialize(writeBuffer, (SemanticChangeStructureDataType) _value);
        } else 
        if(_value instanceof Range) {
            RangeIO.staticSerialize(writeBuffer, (Range) _value);
        } else 
        if(_value instanceof EUInformation) {
            EUInformationIO.staticSerialize(writeBuffer, (EUInformation) _value);
        } else 
        if(_value instanceof ComplexNumberType) {
            ComplexNumberTypeIO.staticSerialize(writeBuffer, (ComplexNumberType) _value);
        } else 
        if(_value instanceof DoubleComplexNumberType) {
            DoubleComplexNumberTypeIO.staticSerialize(writeBuffer, (DoubleComplexNumberType) _value);
        } else 
        if(_value instanceof AxisInformation) {
            AxisInformationIO.staticSerialize(writeBuffer, (AxisInformation) _value);
        } else 
        if(_value instanceof XVType) {
            XVTypeIO.staticSerialize(writeBuffer, (XVType) _value);
        } else 
        if(_value instanceof ProgramDiagnosticDataType) {
            ProgramDiagnosticDataTypeIO.staticSerialize(writeBuffer, (ProgramDiagnosticDataType) _value);
        } else 
        if(_value instanceof ProgramDiagnostic2DataType) {
            ProgramDiagnostic2DataTypeIO.staticSerialize(writeBuffer, (ProgramDiagnostic2DataType) _value);
        } else 
        if(_value instanceof Annotation) {
            AnnotationIO.staticSerialize(writeBuffer, (Annotation) _value);
        } else 
        if(_value instanceof DataChangeNotification) {
            DataChangeNotificationIO.staticSerialize(writeBuffer, (DataChangeNotification) _value);
        } else 
        if(_value instanceof EventNotificationList) {
            EventNotificationListIO.staticSerialize(writeBuffer, (EventNotificationList) _value);
        } else 
        if(_value instanceof StatusChangeNotification) {
            StatusChangeNotificationIO.staticSerialize(writeBuffer, (StatusChangeNotification) _value);
        } else 
        if(_value instanceof UserIdentityToken) {
            UserIdentityTokenIO.staticSerialize(writeBuffer, (UserIdentityToken) _value);
        }
        writeBuffer.popContext("ExtensionObjectDefinition");
    }

    public static interface ExtensionObjectDefinitionBuilder {
        ExtensionObjectDefinition build();
    }

}
