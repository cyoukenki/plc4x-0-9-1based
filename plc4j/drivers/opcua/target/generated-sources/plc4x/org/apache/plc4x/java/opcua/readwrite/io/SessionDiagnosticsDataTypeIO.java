/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
package org.apache.plc4x.java.opcua.readwrite.io;

import static org.apache.plc4x.java.spi.generation.StaticHelper.*;

import org.apache.plc4x.java.opcua.readwrite.*;
import org.apache.plc4x.java.opcua.readwrite.io.*;
import org.apache.plc4x.java.opcua.readwrite.types.*;
import org.apache.plc4x.java.api.exceptions.PlcRuntimeException;
import org.apache.plc4x.java.spi.generation.*;
import org.apache.plc4x.java.api.value.PlcValue;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.math.BigInteger;
import java.time.*;
import java.util.LinkedList;
import java.util.List;
import java.util.function.Supplier;

// Code generated by code-generation. DO NOT EDIT.

public class SessionDiagnosticsDataTypeIO implements MessageIO<SessionDiagnosticsDataType, SessionDiagnosticsDataType> {

    private static final Logger LOGGER = LoggerFactory.getLogger(SessionDiagnosticsDataTypeIO.class);

    @Override
    public SessionDiagnosticsDataType parse(ReadBuffer readBuffer, Object... args) throws ParseException {
        return (SessionDiagnosticsDataType) new ExtensionObjectDefinitionIO().parse(readBuffer, args);
    }

    @Override
    public void serialize(WriteBuffer writeBuffer, SessionDiagnosticsDataType value, Object... args) throws ParseException {
        new ExtensionObjectDefinitionIO().serialize(writeBuffer, value, args);
    }

    public static SessionDiagnosticsDataTypeBuilder staticParse(ReadBuffer readBuffer) throws ParseException {
        readBuffer.pullContext("SessionDiagnosticsDataType");
        int startPos = readBuffer.getPos();
        int curPos;

        readBuffer.pullContext("sessionId");

        // Simple Field (sessionId)
NodeId sessionId = NodeIdIO.staticParse(readBuffer ) ;        readBuffer.closeContext("sessionId");

        readBuffer.pullContext("sessionName");

        // Simple Field (sessionName)
PascalString sessionName = PascalStringIO.staticParse(readBuffer ) ;        readBuffer.closeContext("sessionName");

        readBuffer.pullContext("clientDescription");

        // Simple Field (clientDescription)
ExtensionObjectDefinition clientDescription = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(310) ) ;        readBuffer.closeContext("clientDescription");

        readBuffer.pullContext("serverUri");

        // Simple Field (serverUri)
PascalString serverUri = PascalStringIO.staticParse(readBuffer ) ;        readBuffer.closeContext("serverUri");

        readBuffer.pullContext("endpointUrl");

        // Simple Field (endpointUrl)
PascalString endpointUrl = PascalStringIO.staticParse(readBuffer ) ;        readBuffer.closeContext("endpointUrl");


        // Simple Field (noOfLocaleIds)
int noOfLocaleIds = readBuffer.readInt("noOfLocaleIds", 32) ;        // Array field (localeIds)
        readBuffer.pullContext("localeIds", WithReaderWriterArgs.WithRenderAsList(true));
        // Count array
        if(noOfLocaleIds > Integer.MAX_VALUE) {
            throw new ParseException("Array count of " + (noOfLocaleIds) + " exceeds the maximum allowed count of " + Integer.MAX_VALUE);
        }
        PascalString[] localeIds;
        {
            int itemCount = Math.max(0, (int) noOfLocaleIds);
            localeIds = new PascalString[itemCount];
            for(int curItem = 0; curItem < itemCount; curItem++) {
                boolean lastItem = curItem == (itemCount - 1);
localeIds[curItem] = PascalStringIO.staticParse(readBuffer ) ;            }
        }
            readBuffer.closeContext("localeIds", WithReaderWriterArgs.WithRenderAsList(true));


        // Simple Field (actualSessionTimeout)
double actualSessionTimeout = ((Supplier<Double>) (() -> { return (double) toFloat(readBuffer, "actualSessionTimeout", true, 11, 52); })).get() ;

        // Simple Field (maxResponseMessageSize)
long maxResponseMessageSize = readBuffer.readUnsignedLong("maxResponseMessageSize", 32) ;

        // Simple Field (clientConnectionTime)
long clientConnectionTime = readBuffer.readLong("clientConnectionTime", 64) ;

        // Simple Field (clientLastContactTime)
long clientLastContactTime = readBuffer.readLong("clientLastContactTime", 64) ;

        // Simple Field (currentSubscriptionsCount)
long currentSubscriptionsCount = readBuffer.readUnsignedLong("currentSubscriptionsCount", 32) ;

        // Simple Field (currentMonitoredItemsCount)
long currentMonitoredItemsCount = readBuffer.readUnsignedLong("currentMonitoredItemsCount", 32) ;

        // Simple Field (currentPublishRequestsInQueue)
long currentPublishRequestsInQueue = readBuffer.readUnsignedLong("currentPublishRequestsInQueue", 32) ;
        readBuffer.pullContext("totalRequestCount");

        // Simple Field (totalRequestCount)
ExtensionObjectDefinition totalRequestCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("totalRequestCount");


        // Simple Field (unauthorizedRequestCount)
long unauthorizedRequestCount = readBuffer.readUnsignedLong("unauthorizedRequestCount", 32) ;
        readBuffer.pullContext("readCount");

        // Simple Field (readCount)
ExtensionObjectDefinition readCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("readCount");

        readBuffer.pullContext("historyReadCount");

        // Simple Field (historyReadCount)
ExtensionObjectDefinition historyReadCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("historyReadCount");

        readBuffer.pullContext("writeCount");

        // Simple Field (writeCount)
ExtensionObjectDefinition writeCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("writeCount");

        readBuffer.pullContext("historyUpdateCount");

        // Simple Field (historyUpdateCount)
ExtensionObjectDefinition historyUpdateCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("historyUpdateCount");

        readBuffer.pullContext("callCount");

        // Simple Field (callCount)
ExtensionObjectDefinition callCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("callCount");

        readBuffer.pullContext("createMonitoredItemsCount");

        // Simple Field (createMonitoredItemsCount)
ExtensionObjectDefinition createMonitoredItemsCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("createMonitoredItemsCount");

        readBuffer.pullContext("modifyMonitoredItemsCount");

        // Simple Field (modifyMonitoredItemsCount)
ExtensionObjectDefinition modifyMonitoredItemsCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("modifyMonitoredItemsCount");

        readBuffer.pullContext("setMonitoringModeCount");

        // Simple Field (setMonitoringModeCount)
ExtensionObjectDefinition setMonitoringModeCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("setMonitoringModeCount");

        readBuffer.pullContext("setTriggeringCount");

        // Simple Field (setTriggeringCount)
ExtensionObjectDefinition setTriggeringCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("setTriggeringCount");

        readBuffer.pullContext("deleteMonitoredItemsCount");

        // Simple Field (deleteMonitoredItemsCount)
ExtensionObjectDefinition deleteMonitoredItemsCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("deleteMonitoredItemsCount");

        readBuffer.pullContext("createSubscriptionCount");

        // Simple Field (createSubscriptionCount)
ExtensionObjectDefinition createSubscriptionCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("createSubscriptionCount");

        readBuffer.pullContext("modifySubscriptionCount");

        // Simple Field (modifySubscriptionCount)
ExtensionObjectDefinition modifySubscriptionCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("modifySubscriptionCount");

        readBuffer.pullContext("setPublishingModeCount");

        // Simple Field (setPublishingModeCount)
ExtensionObjectDefinition setPublishingModeCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("setPublishingModeCount");

        readBuffer.pullContext("publishCount");

        // Simple Field (publishCount)
ExtensionObjectDefinition publishCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("publishCount");

        readBuffer.pullContext("republishCount");

        // Simple Field (republishCount)
ExtensionObjectDefinition republishCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("republishCount");

        readBuffer.pullContext("transferSubscriptionsCount");

        // Simple Field (transferSubscriptionsCount)
ExtensionObjectDefinition transferSubscriptionsCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("transferSubscriptionsCount");

        readBuffer.pullContext("deleteSubscriptionsCount");

        // Simple Field (deleteSubscriptionsCount)
ExtensionObjectDefinition deleteSubscriptionsCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("deleteSubscriptionsCount");

        readBuffer.pullContext("addNodesCount");

        // Simple Field (addNodesCount)
ExtensionObjectDefinition addNodesCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("addNodesCount");

        readBuffer.pullContext("addReferencesCount");

        // Simple Field (addReferencesCount)
ExtensionObjectDefinition addReferencesCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("addReferencesCount");

        readBuffer.pullContext("deleteNodesCount");

        // Simple Field (deleteNodesCount)
ExtensionObjectDefinition deleteNodesCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("deleteNodesCount");

        readBuffer.pullContext("deleteReferencesCount");

        // Simple Field (deleteReferencesCount)
ExtensionObjectDefinition deleteReferencesCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("deleteReferencesCount");

        readBuffer.pullContext("browseCount");

        // Simple Field (browseCount)
ExtensionObjectDefinition browseCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("browseCount");

        readBuffer.pullContext("browseNextCount");

        // Simple Field (browseNextCount)
ExtensionObjectDefinition browseNextCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("browseNextCount");

        readBuffer.pullContext("translateBrowsePathsToNodeIdsCount");

        // Simple Field (translateBrowsePathsToNodeIdsCount)
ExtensionObjectDefinition translateBrowsePathsToNodeIdsCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("translateBrowsePathsToNodeIdsCount");

        readBuffer.pullContext("queryFirstCount");

        // Simple Field (queryFirstCount)
ExtensionObjectDefinition queryFirstCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("queryFirstCount");

        readBuffer.pullContext("queryNextCount");

        // Simple Field (queryNextCount)
ExtensionObjectDefinition queryNextCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("queryNextCount");

        readBuffer.pullContext("registerNodesCount");

        // Simple Field (registerNodesCount)
ExtensionObjectDefinition registerNodesCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("registerNodesCount");

        readBuffer.pullContext("unregisterNodesCount");

        // Simple Field (unregisterNodesCount)
ExtensionObjectDefinition unregisterNodesCount = ExtensionObjectDefinitionIO.staticParse(readBuffer , String.valueOf(873) ) ;        readBuffer.closeContext("unregisterNodesCount");

        readBuffer.closeContext("SessionDiagnosticsDataType");
        // Create the instance
        return new SessionDiagnosticsDataTypeBuilder(sessionId, sessionName, clientDescription, serverUri, endpointUrl, noOfLocaleIds, localeIds, actualSessionTimeout, maxResponseMessageSize, clientConnectionTime, clientLastContactTime, currentSubscriptionsCount, currentMonitoredItemsCount, currentPublishRequestsInQueue, totalRequestCount, unauthorizedRequestCount, readCount, historyReadCount, writeCount, historyUpdateCount, callCount, createMonitoredItemsCount, modifyMonitoredItemsCount, setMonitoringModeCount, setTriggeringCount, deleteMonitoredItemsCount, createSubscriptionCount, modifySubscriptionCount, setPublishingModeCount, publishCount, republishCount, transferSubscriptionsCount, deleteSubscriptionsCount, addNodesCount, addReferencesCount, deleteNodesCount, deleteReferencesCount, browseCount, browseNextCount, translateBrowsePathsToNodeIdsCount, queryFirstCount, queryNextCount, registerNodesCount, unregisterNodesCount);
    }

    public static void staticSerialize(WriteBuffer writeBuffer, SessionDiagnosticsDataType _value) throws ParseException {
        int startPos = writeBuffer.getPos();
        writeBuffer.pushContext("SessionDiagnosticsDataType");

        // Simple Field (sessionId)
        NodeId sessionId = (NodeId) _value.getSessionId();
        writeBuffer.pushContext("sessionId");
        NodeIdIO.staticSerialize(writeBuffer, sessionId);
        writeBuffer.popContext("sessionId");

        // Simple Field (sessionName)
        PascalString sessionName = (PascalString) _value.getSessionName();
        writeBuffer.pushContext("sessionName");
        PascalStringIO.staticSerialize(writeBuffer, sessionName);
        writeBuffer.popContext("sessionName");

        // Simple Field (clientDescription)
        ExtensionObjectDefinition clientDescription = (ExtensionObjectDefinition) _value.getClientDescription();
        writeBuffer.pushContext("clientDescription");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, clientDescription);
        writeBuffer.popContext("clientDescription");

        // Simple Field (serverUri)
        PascalString serverUri = (PascalString) _value.getServerUri();
        writeBuffer.pushContext("serverUri");
        PascalStringIO.staticSerialize(writeBuffer, serverUri);
        writeBuffer.popContext("serverUri");

        // Simple Field (endpointUrl)
        PascalString endpointUrl = (PascalString) _value.getEndpointUrl();
        writeBuffer.pushContext("endpointUrl");
        PascalStringIO.staticSerialize(writeBuffer, endpointUrl);
        writeBuffer.popContext("endpointUrl");

        // Simple Field (noOfLocaleIds)
        int noOfLocaleIds = (int) _value.getNoOfLocaleIds();
        writeBuffer.writeInt("noOfLocaleIds", 32, ((Number) (noOfLocaleIds)).intValue());

        // Array Field (localeIds)
        if(_value.getLocaleIds() != null) {
            writeBuffer.pushContext("localeIds", WithReaderWriterArgs.WithRenderAsList(true));
            int itemCount = (int) _value.getLocaleIds().length;
            int curItem = 0;
            for(PascalString element : _value.getLocaleIds()) {
                boolean lastItem = curItem == (itemCount - 1);
                PascalStringIO.staticSerialize(writeBuffer, element);
                curItem++;
            }
            writeBuffer.popContext("localeIds", WithReaderWriterArgs.WithRenderAsList(true));
        }

        // Simple Field (actualSessionTimeout)
        double actualSessionTimeout = (double) _value.getActualSessionTimeout();
        writeBuffer.writeDouble("actualSessionTimeout", (actualSessionTimeout),11,52);

        // Simple Field (maxResponseMessageSize)
        long maxResponseMessageSize = (long) _value.getMaxResponseMessageSize();
        writeBuffer.writeUnsignedLong("maxResponseMessageSize", 32, ((Number) (maxResponseMessageSize)).longValue());

        // Simple Field (clientConnectionTime)
        long clientConnectionTime = (long) _value.getClientConnectionTime();
        writeBuffer.writeLong("clientConnectionTime", 64, ((Number) (clientConnectionTime)).longValue());

        // Simple Field (clientLastContactTime)
        long clientLastContactTime = (long) _value.getClientLastContactTime();
        writeBuffer.writeLong("clientLastContactTime", 64, ((Number) (clientLastContactTime)).longValue());

        // Simple Field (currentSubscriptionsCount)
        long currentSubscriptionsCount = (long) _value.getCurrentSubscriptionsCount();
        writeBuffer.writeUnsignedLong("currentSubscriptionsCount", 32, ((Number) (currentSubscriptionsCount)).longValue());

        // Simple Field (currentMonitoredItemsCount)
        long currentMonitoredItemsCount = (long) _value.getCurrentMonitoredItemsCount();
        writeBuffer.writeUnsignedLong("currentMonitoredItemsCount", 32, ((Number) (currentMonitoredItemsCount)).longValue());

        // Simple Field (currentPublishRequestsInQueue)
        long currentPublishRequestsInQueue = (long) _value.getCurrentPublishRequestsInQueue();
        writeBuffer.writeUnsignedLong("currentPublishRequestsInQueue", 32, ((Number) (currentPublishRequestsInQueue)).longValue());

        // Simple Field (totalRequestCount)
        ExtensionObjectDefinition totalRequestCount = (ExtensionObjectDefinition) _value.getTotalRequestCount();
        writeBuffer.pushContext("totalRequestCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, totalRequestCount);
        writeBuffer.popContext("totalRequestCount");

        // Simple Field (unauthorizedRequestCount)
        long unauthorizedRequestCount = (long) _value.getUnauthorizedRequestCount();
        writeBuffer.writeUnsignedLong("unauthorizedRequestCount", 32, ((Number) (unauthorizedRequestCount)).longValue());

        // Simple Field (readCount)
        ExtensionObjectDefinition readCount = (ExtensionObjectDefinition) _value.getReadCount();
        writeBuffer.pushContext("readCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, readCount);
        writeBuffer.popContext("readCount");

        // Simple Field (historyReadCount)
        ExtensionObjectDefinition historyReadCount = (ExtensionObjectDefinition) _value.getHistoryReadCount();
        writeBuffer.pushContext("historyReadCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, historyReadCount);
        writeBuffer.popContext("historyReadCount");

        // Simple Field (writeCount)
        ExtensionObjectDefinition writeCount = (ExtensionObjectDefinition) _value.getWriteCount();
        writeBuffer.pushContext("writeCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, writeCount);
        writeBuffer.popContext("writeCount");

        // Simple Field (historyUpdateCount)
        ExtensionObjectDefinition historyUpdateCount = (ExtensionObjectDefinition) _value.getHistoryUpdateCount();
        writeBuffer.pushContext("historyUpdateCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, historyUpdateCount);
        writeBuffer.popContext("historyUpdateCount");

        // Simple Field (callCount)
        ExtensionObjectDefinition callCount = (ExtensionObjectDefinition) _value.getCallCount();
        writeBuffer.pushContext("callCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, callCount);
        writeBuffer.popContext("callCount");

        // Simple Field (createMonitoredItemsCount)
        ExtensionObjectDefinition createMonitoredItemsCount = (ExtensionObjectDefinition) _value.getCreateMonitoredItemsCount();
        writeBuffer.pushContext("createMonitoredItemsCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, createMonitoredItemsCount);
        writeBuffer.popContext("createMonitoredItemsCount");

        // Simple Field (modifyMonitoredItemsCount)
        ExtensionObjectDefinition modifyMonitoredItemsCount = (ExtensionObjectDefinition) _value.getModifyMonitoredItemsCount();
        writeBuffer.pushContext("modifyMonitoredItemsCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, modifyMonitoredItemsCount);
        writeBuffer.popContext("modifyMonitoredItemsCount");

        // Simple Field (setMonitoringModeCount)
        ExtensionObjectDefinition setMonitoringModeCount = (ExtensionObjectDefinition) _value.getSetMonitoringModeCount();
        writeBuffer.pushContext("setMonitoringModeCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, setMonitoringModeCount);
        writeBuffer.popContext("setMonitoringModeCount");

        // Simple Field (setTriggeringCount)
        ExtensionObjectDefinition setTriggeringCount = (ExtensionObjectDefinition) _value.getSetTriggeringCount();
        writeBuffer.pushContext("setTriggeringCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, setTriggeringCount);
        writeBuffer.popContext("setTriggeringCount");

        // Simple Field (deleteMonitoredItemsCount)
        ExtensionObjectDefinition deleteMonitoredItemsCount = (ExtensionObjectDefinition) _value.getDeleteMonitoredItemsCount();
        writeBuffer.pushContext("deleteMonitoredItemsCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, deleteMonitoredItemsCount);
        writeBuffer.popContext("deleteMonitoredItemsCount");

        // Simple Field (createSubscriptionCount)
        ExtensionObjectDefinition createSubscriptionCount = (ExtensionObjectDefinition) _value.getCreateSubscriptionCount();
        writeBuffer.pushContext("createSubscriptionCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, createSubscriptionCount);
        writeBuffer.popContext("createSubscriptionCount");

        // Simple Field (modifySubscriptionCount)
        ExtensionObjectDefinition modifySubscriptionCount = (ExtensionObjectDefinition) _value.getModifySubscriptionCount();
        writeBuffer.pushContext("modifySubscriptionCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, modifySubscriptionCount);
        writeBuffer.popContext("modifySubscriptionCount");

        // Simple Field (setPublishingModeCount)
        ExtensionObjectDefinition setPublishingModeCount = (ExtensionObjectDefinition) _value.getSetPublishingModeCount();
        writeBuffer.pushContext("setPublishingModeCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, setPublishingModeCount);
        writeBuffer.popContext("setPublishingModeCount");

        // Simple Field (publishCount)
        ExtensionObjectDefinition publishCount = (ExtensionObjectDefinition) _value.getPublishCount();
        writeBuffer.pushContext("publishCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, publishCount);
        writeBuffer.popContext("publishCount");

        // Simple Field (republishCount)
        ExtensionObjectDefinition republishCount = (ExtensionObjectDefinition) _value.getRepublishCount();
        writeBuffer.pushContext("republishCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, republishCount);
        writeBuffer.popContext("republishCount");

        // Simple Field (transferSubscriptionsCount)
        ExtensionObjectDefinition transferSubscriptionsCount = (ExtensionObjectDefinition) _value.getTransferSubscriptionsCount();
        writeBuffer.pushContext("transferSubscriptionsCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, transferSubscriptionsCount);
        writeBuffer.popContext("transferSubscriptionsCount");

        // Simple Field (deleteSubscriptionsCount)
        ExtensionObjectDefinition deleteSubscriptionsCount = (ExtensionObjectDefinition) _value.getDeleteSubscriptionsCount();
        writeBuffer.pushContext("deleteSubscriptionsCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, deleteSubscriptionsCount);
        writeBuffer.popContext("deleteSubscriptionsCount");

        // Simple Field (addNodesCount)
        ExtensionObjectDefinition addNodesCount = (ExtensionObjectDefinition) _value.getAddNodesCount();
        writeBuffer.pushContext("addNodesCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, addNodesCount);
        writeBuffer.popContext("addNodesCount");

        // Simple Field (addReferencesCount)
        ExtensionObjectDefinition addReferencesCount = (ExtensionObjectDefinition) _value.getAddReferencesCount();
        writeBuffer.pushContext("addReferencesCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, addReferencesCount);
        writeBuffer.popContext("addReferencesCount");

        // Simple Field (deleteNodesCount)
        ExtensionObjectDefinition deleteNodesCount = (ExtensionObjectDefinition) _value.getDeleteNodesCount();
        writeBuffer.pushContext("deleteNodesCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, deleteNodesCount);
        writeBuffer.popContext("deleteNodesCount");

        // Simple Field (deleteReferencesCount)
        ExtensionObjectDefinition deleteReferencesCount = (ExtensionObjectDefinition) _value.getDeleteReferencesCount();
        writeBuffer.pushContext("deleteReferencesCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, deleteReferencesCount);
        writeBuffer.popContext("deleteReferencesCount");

        // Simple Field (browseCount)
        ExtensionObjectDefinition browseCount = (ExtensionObjectDefinition) _value.getBrowseCount();
        writeBuffer.pushContext("browseCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, browseCount);
        writeBuffer.popContext("browseCount");

        // Simple Field (browseNextCount)
        ExtensionObjectDefinition browseNextCount = (ExtensionObjectDefinition) _value.getBrowseNextCount();
        writeBuffer.pushContext("browseNextCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, browseNextCount);
        writeBuffer.popContext("browseNextCount");

        // Simple Field (translateBrowsePathsToNodeIdsCount)
        ExtensionObjectDefinition translateBrowsePathsToNodeIdsCount = (ExtensionObjectDefinition) _value.getTranslateBrowsePathsToNodeIdsCount();
        writeBuffer.pushContext("translateBrowsePathsToNodeIdsCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, translateBrowsePathsToNodeIdsCount);
        writeBuffer.popContext("translateBrowsePathsToNodeIdsCount");

        // Simple Field (queryFirstCount)
        ExtensionObjectDefinition queryFirstCount = (ExtensionObjectDefinition) _value.getQueryFirstCount();
        writeBuffer.pushContext("queryFirstCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, queryFirstCount);
        writeBuffer.popContext("queryFirstCount");

        // Simple Field (queryNextCount)
        ExtensionObjectDefinition queryNextCount = (ExtensionObjectDefinition) _value.getQueryNextCount();
        writeBuffer.pushContext("queryNextCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, queryNextCount);
        writeBuffer.popContext("queryNextCount");

        // Simple Field (registerNodesCount)
        ExtensionObjectDefinition registerNodesCount = (ExtensionObjectDefinition) _value.getRegisterNodesCount();
        writeBuffer.pushContext("registerNodesCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, registerNodesCount);
        writeBuffer.popContext("registerNodesCount");

        // Simple Field (unregisterNodesCount)
        ExtensionObjectDefinition unregisterNodesCount = (ExtensionObjectDefinition) _value.getUnregisterNodesCount();
        writeBuffer.pushContext("unregisterNodesCount");
        ExtensionObjectDefinitionIO.staticSerialize(writeBuffer, unregisterNodesCount);
        writeBuffer.popContext("unregisterNodesCount");
        writeBuffer.popContext("SessionDiagnosticsDataType");
    }

    public static class SessionDiagnosticsDataTypeBuilder implements ExtensionObjectDefinitionIO.ExtensionObjectDefinitionBuilder {
        private final NodeId sessionId;
        private final PascalString sessionName;
        private final ExtensionObjectDefinition clientDescription;
        private final PascalString serverUri;
        private final PascalString endpointUrl;
        private final int noOfLocaleIds;
        private final PascalString[] localeIds;
        private final double actualSessionTimeout;
        private final long maxResponseMessageSize;
        private final long clientConnectionTime;
        private final long clientLastContactTime;
        private final long currentSubscriptionsCount;
        private final long currentMonitoredItemsCount;
        private final long currentPublishRequestsInQueue;
        private final ExtensionObjectDefinition totalRequestCount;
        private final long unauthorizedRequestCount;
        private final ExtensionObjectDefinition readCount;
        private final ExtensionObjectDefinition historyReadCount;
        private final ExtensionObjectDefinition writeCount;
        private final ExtensionObjectDefinition historyUpdateCount;
        private final ExtensionObjectDefinition callCount;
        private final ExtensionObjectDefinition createMonitoredItemsCount;
        private final ExtensionObjectDefinition modifyMonitoredItemsCount;
        private final ExtensionObjectDefinition setMonitoringModeCount;
        private final ExtensionObjectDefinition setTriggeringCount;
        private final ExtensionObjectDefinition deleteMonitoredItemsCount;
        private final ExtensionObjectDefinition createSubscriptionCount;
        private final ExtensionObjectDefinition modifySubscriptionCount;
        private final ExtensionObjectDefinition setPublishingModeCount;
        private final ExtensionObjectDefinition publishCount;
        private final ExtensionObjectDefinition republishCount;
        private final ExtensionObjectDefinition transferSubscriptionsCount;
        private final ExtensionObjectDefinition deleteSubscriptionsCount;
        private final ExtensionObjectDefinition addNodesCount;
        private final ExtensionObjectDefinition addReferencesCount;
        private final ExtensionObjectDefinition deleteNodesCount;
        private final ExtensionObjectDefinition deleteReferencesCount;
        private final ExtensionObjectDefinition browseCount;
        private final ExtensionObjectDefinition browseNextCount;
        private final ExtensionObjectDefinition translateBrowsePathsToNodeIdsCount;
        private final ExtensionObjectDefinition queryFirstCount;
        private final ExtensionObjectDefinition queryNextCount;
        private final ExtensionObjectDefinition registerNodesCount;
        private final ExtensionObjectDefinition unregisterNodesCount;

        public SessionDiagnosticsDataTypeBuilder(NodeId sessionId, PascalString sessionName, ExtensionObjectDefinition clientDescription, PascalString serverUri, PascalString endpointUrl, int noOfLocaleIds, PascalString[] localeIds, double actualSessionTimeout, long maxResponseMessageSize, long clientConnectionTime, long clientLastContactTime, long currentSubscriptionsCount, long currentMonitoredItemsCount, long currentPublishRequestsInQueue, ExtensionObjectDefinition totalRequestCount, long unauthorizedRequestCount, ExtensionObjectDefinition readCount, ExtensionObjectDefinition historyReadCount, ExtensionObjectDefinition writeCount, ExtensionObjectDefinition historyUpdateCount, ExtensionObjectDefinition callCount, ExtensionObjectDefinition createMonitoredItemsCount, ExtensionObjectDefinition modifyMonitoredItemsCount, ExtensionObjectDefinition setMonitoringModeCount, ExtensionObjectDefinition setTriggeringCount, ExtensionObjectDefinition deleteMonitoredItemsCount, ExtensionObjectDefinition createSubscriptionCount, ExtensionObjectDefinition modifySubscriptionCount, ExtensionObjectDefinition setPublishingModeCount, ExtensionObjectDefinition publishCount, ExtensionObjectDefinition republishCount, ExtensionObjectDefinition transferSubscriptionsCount, ExtensionObjectDefinition deleteSubscriptionsCount, ExtensionObjectDefinition addNodesCount, ExtensionObjectDefinition addReferencesCount, ExtensionObjectDefinition deleteNodesCount, ExtensionObjectDefinition deleteReferencesCount, ExtensionObjectDefinition browseCount, ExtensionObjectDefinition browseNextCount, ExtensionObjectDefinition translateBrowsePathsToNodeIdsCount, ExtensionObjectDefinition queryFirstCount, ExtensionObjectDefinition queryNextCount, ExtensionObjectDefinition registerNodesCount, ExtensionObjectDefinition unregisterNodesCount) {
            this.sessionId = sessionId;
            this.sessionName = sessionName;
            this.clientDescription = clientDescription;
            this.serverUri = serverUri;
            this.endpointUrl = endpointUrl;
            this.noOfLocaleIds = noOfLocaleIds;
            this.localeIds = localeIds;
            this.actualSessionTimeout = actualSessionTimeout;
            this.maxResponseMessageSize = maxResponseMessageSize;
            this.clientConnectionTime = clientConnectionTime;
            this.clientLastContactTime = clientLastContactTime;
            this.currentSubscriptionsCount = currentSubscriptionsCount;
            this.currentMonitoredItemsCount = currentMonitoredItemsCount;
            this.currentPublishRequestsInQueue = currentPublishRequestsInQueue;
            this.totalRequestCount = totalRequestCount;
            this.unauthorizedRequestCount = unauthorizedRequestCount;
            this.readCount = readCount;
            this.historyReadCount = historyReadCount;
            this.writeCount = writeCount;
            this.historyUpdateCount = historyUpdateCount;
            this.callCount = callCount;
            this.createMonitoredItemsCount = createMonitoredItemsCount;
            this.modifyMonitoredItemsCount = modifyMonitoredItemsCount;
            this.setMonitoringModeCount = setMonitoringModeCount;
            this.setTriggeringCount = setTriggeringCount;
            this.deleteMonitoredItemsCount = deleteMonitoredItemsCount;
            this.createSubscriptionCount = createSubscriptionCount;
            this.modifySubscriptionCount = modifySubscriptionCount;
            this.setPublishingModeCount = setPublishingModeCount;
            this.publishCount = publishCount;
            this.republishCount = republishCount;
            this.transferSubscriptionsCount = transferSubscriptionsCount;
            this.deleteSubscriptionsCount = deleteSubscriptionsCount;
            this.addNodesCount = addNodesCount;
            this.addReferencesCount = addReferencesCount;
            this.deleteNodesCount = deleteNodesCount;
            this.deleteReferencesCount = deleteReferencesCount;
            this.browseCount = browseCount;
            this.browseNextCount = browseNextCount;
            this.translateBrowsePathsToNodeIdsCount = translateBrowsePathsToNodeIdsCount;
            this.queryFirstCount = queryFirstCount;
            this.queryNextCount = queryNextCount;
            this.registerNodesCount = registerNodesCount;
            this.unregisterNodesCount = unregisterNodesCount;
        }

        public SessionDiagnosticsDataType build() {
            return new SessionDiagnosticsDataType(sessionId, sessionName, clientDescription, serverUri, endpointUrl, noOfLocaleIds, localeIds, actualSessionTimeout, maxResponseMessageSize, clientConnectionTime, clientLastContactTime, currentSubscriptionsCount, currentMonitoredItemsCount, currentPublishRequestsInQueue, totalRequestCount, unauthorizedRequestCount, readCount, historyReadCount, writeCount, historyUpdateCount, callCount, createMonitoredItemsCount, modifyMonitoredItemsCount, setMonitoringModeCount, setTriggeringCount, deleteMonitoredItemsCount, createSubscriptionCount, modifySubscriptionCount, setPublishingModeCount, publishCount, republishCount, transferSubscriptionsCount, deleteSubscriptionsCount, addNodesCount, addReferencesCount, deleteNodesCount, deleteReferencesCount, browseCount, browseNextCount, translateBrowsePathsToNodeIdsCount, queryFirstCount, queryNextCount, registerNodesCount, unregisterNodesCount);
        }
    }

}
